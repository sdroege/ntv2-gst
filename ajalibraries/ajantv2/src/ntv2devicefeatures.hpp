/**
	@file		ntv2devicefeatures.hpp
	@brief		Contains implementations of NTV2DeviceCanDo... and NTV2DeviceGetNum... functions.
				This module is included at compile time from 'ntv2devicefeatures.cpp'.
	@copyright	(C) 2004-2017 AJA Video Systems, Inc.	Proprietary and confidential information.
	@note		Generated by 'ajalibraries/ajantv2/sdkgen/ntv2devicefeatures.py' on Wed Jan 24 10:31:16 2018.
**/


/**
	NTV2DeviceCanDoVideoFormat
**/
bool NTV2DeviceCanDoVideoFormat (const NTV2DeviceID inDeviceID, const NTV2VideoFormat inVideoFormat)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_CORVID1
			break;	//  DEVICE_ID_CORVID1

		case DEVICE_ID_CORVID3G:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_CORVID3G
			break;	//  DEVICE_ID_CORVID3G

		case DEVICE_ID_KONALHI:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONALHI
			break;	//  DEVICE_ID_KONALHI

		case DEVICE_ID_KONALHIDVI:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONALHIDVI
			break;	//  DEVICE_ID_KONALHIDVI

		case DEVICE_ID_KONALHEPLUS:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONALHEPLUS
			break;	//  DEVICE_ID_KONALHEPLUS

		case DEVICE_ID_IOEXPRESS:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_IOEXPRESS
			break;	//  DEVICE_ID_IOEXPRESS

		case DEVICE_ID_CORVID22:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_CORVID22
			break;	//  DEVICE_ID_CORVID22

		case DEVICE_ID_KONA3G:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
				case NTV2_FORMAT_525psf_2997:
				case NTV2_FORMAT_625psf_2500:
				case NTV2_FORMAT_2K_1498:
				case NTV2_FORMAT_2K_1500:
				case NTV2_FORMAT_2K_2398:
				case NTV2_FORMAT_2K_2400:
				case NTV2_FORMAT_2K_2500:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONA3G
			break;	//  DEVICE_ID_KONA3G

		case DEVICE_ID_KONA3GQUAD:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_4x1920x1080p_2398:
				case NTV2_FORMAT_4x1920x1080p_2400:
				case NTV2_FORMAT_4x1920x1080p_2500:
				case NTV2_FORMAT_4x2048x1080p_2398:
				case NTV2_FORMAT_4x2048x1080p_2400:
				case NTV2_FORMAT_4x2048x1080p_2500:
				case NTV2_FORMAT_4x1920x1080p_2997:
				case NTV2_FORMAT_4x1920x1080p_3000:
				case NTV2_FORMAT_4x2048x1080p_2997:
				case NTV2_FORMAT_4x2048x1080p_3000:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONA3GQUAD
			break;	//  DEVICE_ID_KONA3GQUAD

		case DEVICE_ID_CORVID24:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_4x1920x1080p_2398:
				case NTV2_FORMAT_4x1920x1080p_2400:
				case NTV2_FORMAT_4x1920x1080p_2500:
				case NTV2_FORMAT_4x2048x1080p_2398:
				case NTV2_FORMAT_4x2048x1080p_2400:
				case NTV2_FORMAT_4x2048x1080p_2500:
				case NTV2_FORMAT_4x1920x1080p_2997:
				case NTV2_FORMAT_4x1920x1080p_3000:
				case NTV2_FORMAT_4x2048x1080p_2997:
				case NTV2_FORMAT_4x2048x1080p_3000:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_CORVID24
			break;	//  DEVICE_ID_CORVID24

		case DEVICE_ID_IOXT:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_IOXT
			break;	//  DEVICE_ID_IOXT

		case DEVICE_ID_TTAP:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_TTAP
			break;	//  DEVICE_ID_TTAP

		case DEVICE_ID_IO4K:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525psf_2997:
				case NTV2_FORMAT_625psf_2500:
				case NTV2_FORMAT_4x1920x1080p_2398:
				case NTV2_FORMAT_4x1920x1080p_2400:
				case NTV2_FORMAT_4x1920x1080p_2500:
				case NTV2_FORMAT_4x2048x1080p_2398:
				case NTV2_FORMAT_4x2048x1080p_2400:
				case NTV2_FORMAT_4x2048x1080p_2500:
				case NTV2_FORMAT_4x1920x1080p_2997:
				case NTV2_FORMAT_4x1920x1080p_3000:
				case NTV2_FORMAT_4x2048x1080p_2997:
				case NTV2_FORMAT_4x2048x1080p_3000:
				case NTV2_FORMAT_4x1920x1080p_5000:
				case NTV2_FORMAT_4x1920x1080p_5994:
				case NTV2_FORMAT_4x1920x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_5000:
				case NTV2_FORMAT_4x2048x1080p_5994:
				case NTV2_FORMAT_4x2048x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_4795:
				case NTV2_FORMAT_4x2048x1080p_4800:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_IO4K
			break;	//  DEVICE_ID_IO4K

		case DEVICE_ID_IO4KUFC:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_IO4KUFC
			break;	//  DEVICE_ID_IO4KUFC

		case DEVICE_ID_CORVID88:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525psf_2997:
				case NTV2_FORMAT_625psf_2500:
				case NTV2_FORMAT_2K_1498:
				case NTV2_FORMAT_2K_1500:
				case NTV2_FORMAT_2K_2398:
				case NTV2_FORMAT_2K_2400:
				case NTV2_FORMAT_2K_2500:
				case NTV2_FORMAT_4x1920x1080p_2398:
				case NTV2_FORMAT_4x1920x1080p_2400:
				case NTV2_FORMAT_4x1920x1080p_2500:
				case NTV2_FORMAT_4x2048x1080p_2398:
				case NTV2_FORMAT_4x2048x1080p_2400:
				case NTV2_FORMAT_4x2048x1080p_2500:
				case NTV2_FORMAT_4x1920x1080p_2997:
				case NTV2_FORMAT_4x1920x1080p_3000:
				case NTV2_FORMAT_4x2048x1080p_2997:
				case NTV2_FORMAT_4x2048x1080p_3000:
				case NTV2_FORMAT_4x1920x1080p_5000:
				case NTV2_FORMAT_4x1920x1080p_5994:
				case NTV2_FORMAT_4x1920x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_5000:
				case NTV2_FORMAT_4x2048x1080p_5994:
				case NTV2_FORMAT_4x2048x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_4795:
				case NTV2_FORMAT_4x2048x1080p_4800:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_CORVID88
			break;	//  DEVICE_ID_CORVID88

		case DEVICE_ID_KONA4:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525psf_2997:
				case NTV2_FORMAT_625psf_2500:
				case NTV2_FORMAT_2K_1498:
				case NTV2_FORMAT_2K_1500:
				case NTV2_FORMAT_2K_2398:
				case NTV2_FORMAT_2K_2400:
				case NTV2_FORMAT_2K_2500:
				case NTV2_FORMAT_4x1920x1080p_2398:
				case NTV2_FORMAT_4x1920x1080p_2400:
				case NTV2_FORMAT_4x1920x1080p_2500:
				case NTV2_FORMAT_4x2048x1080p_2398:
				case NTV2_FORMAT_4x2048x1080p_2400:
				case NTV2_FORMAT_4x2048x1080p_2500:
				case NTV2_FORMAT_4x1920x1080p_2997:
				case NTV2_FORMAT_4x1920x1080p_3000:
				case NTV2_FORMAT_4x2048x1080p_2997:
				case NTV2_FORMAT_4x2048x1080p_3000:
				case NTV2_FORMAT_4x1920x1080p_5000:
				case NTV2_FORMAT_4x1920x1080p_5994:
				case NTV2_FORMAT_4x1920x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_5000:
				case NTV2_FORMAT_4x2048x1080p_5994:
				case NTV2_FORMAT_4x2048x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_4795:
				case NTV2_FORMAT_4x2048x1080p_4800:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONA4
			break;	//  DEVICE_ID_KONA4

		case DEVICE_ID_KONA4UFC:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONA4UFC
			break;	//  DEVICE_ID_KONA4UFC

		case DEVICE_ID_CORVID44:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525psf_2997:
				case NTV2_FORMAT_625psf_2500:
				case NTV2_FORMAT_2K_1498:
				case NTV2_FORMAT_2K_1500:
				case NTV2_FORMAT_2K_2398:
				case NTV2_FORMAT_2K_2400:
				case NTV2_FORMAT_2K_2500:
				case NTV2_FORMAT_4x1920x1080p_2398:
				case NTV2_FORMAT_4x1920x1080p_2400:
				case NTV2_FORMAT_4x1920x1080p_2500:
				case NTV2_FORMAT_4x2048x1080p_2398:
				case NTV2_FORMAT_4x2048x1080p_2400:
				case NTV2_FORMAT_4x2048x1080p_2500:
				case NTV2_FORMAT_4x1920x1080p_2997:
				case NTV2_FORMAT_4x1920x1080p_3000:
				case NTV2_FORMAT_4x2048x1080p_2997:
				case NTV2_FORMAT_4x2048x1080p_3000:
				case NTV2_FORMAT_4x1920x1080p_5000:
				case NTV2_FORMAT_4x1920x1080p_5994:
				case NTV2_FORMAT_4x1920x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_5000:
				case NTV2_FORMAT_4x2048x1080p_5994:
				case NTV2_FORMAT_4x2048x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_4795:
				case NTV2_FORMAT_4x2048x1080p_4800:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_CORVID44
			break;	//  DEVICE_ID_CORVID44

		case DEVICE_ID_CORVIDHEVC:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525psf_2997:
				case NTV2_FORMAT_625psf_2500:
				case NTV2_FORMAT_2K_1498:
				case NTV2_FORMAT_2K_1500:
				case NTV2_FORMAT_2K_2398:
				case NTV2_FORMAT_2K_2400:
				case NTV2_FORMAT_2K_2500:
				case NTV2_FORMAT_4x1920x1080p_2398:
				case NTV2_FORMAT_4x1920x1080p_2400:
				case NTV2_FORMAT_4x1920x1080p_2500:
				case NTV2_FORMAT_4x2048x1080p_2398:
				case NTV2_FORMAT_4x2048x1080p_2400:
				case NTV2_FORMAT_4x2048x1080p_2500:
				case NTV2_FORMAT_4x1920x1080p_2997:
				case NTV2_FORMAT_4x1920x1080p_3000:
				case NTV2_FORMAT_4x2048x1080p_2997:
				case NTV2_FORMAT_4x2048x1080p_3000:
				case NTV2_FORMAT_4x1920x1080p_5000:
				case NTV2_FORMAT_4x1920x1080p_5994:
				case NTV2_FORMAT_4x1920x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_5000:
				case NTV2_FORMAT_4x2048x1080p_5994:
				case NTV2_FORMAT_4x2048x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_4795:
				case NTV2_FORMAT_4x2048x1080p_4800:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_CORVIDHEVC
			break;	//  DEVICE_ID_CORVIDHEVC

		case DEVICE_ID_CORVIDHBR:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_4x1920x1080p_2398:
				case NTV2_FORMAT_4x1920x1080p_2400:
				case NTV2_FORMAT_4x1920x1080p_2500:
				case NTV2_FORMAT_4x2048x1080p_2398:
				case NTV2_FORMAT_4x2048x1080p_2400:
				case NTV2_FORMAT_4x2048x1080p_2500:
				case NTV2_FORMAT_4x1920x1080p_2997:
				case NTV2_FORMAT_4x1920x1080p_3000:
				case NTV2_FORMAT_4x2048x1080p_2997:
				case NTV2_FORMAT_4x2048x1080p_3000:
				case NTV2_FORMAT_4x1920x1080p_5000:
				case NTV2_FORMAT_4x1920x1080p_5994:
				case NTV2_FORMAT_4x1920x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_5000:
				case NTV2_FORMAT_4x2048x1080p_5994:
				case NTV2_FORMAT_4x2048x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_4795:
				case NTV2_FORMAT_4x2048x1080p_4800:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_CORVIDHBR
			break;	//  DEVICE_ID_CORVIDHBR

		case DEVICE_ID_KONAIP_2022:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONAIP_2022
			break;	//  DEVICE_ID_KONAIP_2022

		case DEVICE_ID_KONAIP_4CH_2SFP:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONAIP_4CH_2SFP
			break;	//  DEVICE_ID_KONAIP_4CH_2SFP

		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2400:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K

		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2400:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONAIP_2TX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_2TX_1SFP_J2K

		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2400:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONAIP_2RX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_2RX_1SFP_J2K

		case DEVICE_ID_KONAIP_1RX_1TX_2110:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2398:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2398:
				case NTV2_FORMAT_525_2400:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONAIP_1RX_1TX_2110
			break;	//  DEVICE_ID_KONAIP_1RX_1TX_2110

		case DEVICE_ID_IO4KPLUS:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080psf_2398:
				case NTV2_FORMAT_1080psf_2400:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_1080psf_2K_2398:
				case NTV2_FORMAT_1080psf_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_1080p_5000:
				case NTV2_FORMAT_1080p_5994:
				case NTV2_FORMAT_1080p_6000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_1080psf_2K_2500:
				case NTV2_FORMAT_1080psf_2500_2:
				case NTV2_FORMAT_1080psf_2997_2:
				case NTV2_FORMAT_1080psf_3000_2:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525psf_2997:
				case NTV2_FORMAT_625psf_2500:
				case NTV2_FORMAT_4x1920x1080p_2398:
				case NTV2_FORMAT_4x1920x1080p_2400:
				case NTV2_FORMAT_4x1920x1080p_2500:
				case NTV2_FORMAT_4x2048x1080p_2398:
				case NTV2_FORMAT_4x2048x1080p_2400:
				case NTV2_FORMAT_4x2048x1080p_2500:
				case NTV2_FORMAT_4x1920x1080p_2997:
				case NTV2_FORMAT_4x1920x1080p_3000:
				case NTV2_FORMAT_4x2048x1080p_2997:
				case NTV2_FORMAT_4x2048x1080p_3000:
				case NTV2_FORMAT_4x1920x1080p_5000:
				case NTV2_FORMAT_4x1920x1080p_5994:
				case NTV2_FORMAT_4x1920x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_5000:
				case NTV2_FORMAT_4x2048x1080p_5994:
				case NTV2_FORMAT_4x2048x1080p_6000:
				case NTV2_FORMAT_4x2048x1080p_4795:
				case NTV2_FORMAT_4x2048x1080p_4800:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_IO4KPLUS
			break;	//  DEVICE_ID_IO4KPLUS

		case DEVICE_ID_IOIP_2022:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2400:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_IOIP_2022
			break;	//  DEVICE_ID_IOIP_2022

		case DEVICE_ID_IOIP_2110:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2400:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_IOIP_2110
			break;	//  DEVICE_ID_IOIP_2110

		case DEVICE_ID_KONAIP_2110:
			switch (inVideoFormat)
			{
				case NTV2_FORMAT_1080i_5000:
				case NTV2_FORMAT_1080i_5994:
				case NTV2_FORMAT_1080i_6000:
				case NTV2_FORMAT_720p_5994:
				case NTV2_FORMAT_720p_6000:
				case NTV2_FORMAT_1080p_2997:
				case NTV2_FORMAT_1080p_3000:
				case NTV2_FORMAT_1080p_2500:
				case NTV2_FORMAT_1080p_2398:
				case NTV2_FORMAT_1080p_2400:
				case NTV2_FORMAT_1080p_2K_2398:
				case NTV2_FORMAT_1080p_2K_2400:
				case NTV2_FORMAT_720p_5000:
				case NTV2_FORMAT_720p_2500:
				case NTV2_FORMAT_1080p_5000_A:
				case NTV2_FORMAT_1080p_5994_A:
				case NTV2_FORMAT_1080p_6000_A:
				case NTV2_FORMAT_1080p_2K_2500:
				case NTV2_FORMAT_525_5994:
				case NTV2_FORMAT_625_5000:
				case NTV2_FORMAT_525_2400:
				case NTV2_FORMAT_1080p_2K_6000:
				case NTV2_FORMAT_1080p_2K_5994:
				case NTV2_FORMAT_1080p_2K_2997:
				case NTV2_FORMAT_1080p_2K_3000:
				case NTV2_FORMAT_1080p_2K_5000:
				case NTV2_FORMAT_1080p_2K_4795:
				case NTV2_FORMAT_1080p_2K_4800:
					return true;
				default:
					break;
			}	//  switch on inVideoFormat for device DEVICE_ID_KONAIP_2110
			break;	//  DEVICE_ID_KONAIP_2110

		default:
			break;
	}	//  switch on device ID

	return false;

}	//  NTV2DeviceCanDoVideoFormat (auto-generated)


/**
	NTV2DeviceCanDoFrameBufferFormat
**/
bool NTV2DeviceCanDoFrameBufferFormat (const NTV2DeviceID inDeviceID, const NTV2FrameBufferFormat inFBFormat)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_CORVID1
			break;	//  DEVICE_ID_CORVID1

		case DEVICE_ID_CORVID3G:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_CORVID3G
			break;	//  DEVICE_ID_CORVID3G

		case DEVICE_ID_KONALHI:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONALHI
			break;	//  DEVICE_ID_KONALHI

		case DEVICE_ID_KONALHIDVI:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONALHIDVI
			break;	//  DEVICE_ID_KONALHIDVI

		case DEVICE_ID_KONALHEPLUS:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONALHEPLUS
			break;	//  DEVICE_ID_KONALHEPLUS

		case DEVICE_ID_IOEXPRESS:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_IOEXPRESS
			break;	//  DEVICE_ID_IOEXPRESS

		case DEVICE_ID_CORVID22:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_CORVID22
			break;	//  DEVICE_ID_CORVID22

		case DEVICE_ID_KONA3G:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONA3G
			break;	//  DEVICE_ID_KONA3G

		case DEVICE_ID_KONA3GQUAD:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONA3GQUAD
			break;	//  DEVICE_ID_KONA3GQUAD

		case DEVICE_ID_CORVID24:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_CORVID24
			break;	//  DEVICE_ID_CORVID24

		case DEVICE_ID_IOXT:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_IOXT
			break;	//  DEVICE_ID_IOXT

		case DEVICE_ID_TTAP:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_TTAP
			break;	//  DEVICE_ID_TTAP

		case DEVICE_ID_IO4K:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
				case NTV2_FBF_10BIT_RAW_RGB:
				case NTV2_FBF_10BIT_RAW_YCBCR:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_IO4K
			break;	//  DEVICE_ID_IO4K

		case DEVICE_ID_IO4KUFC:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_IO4KUFC
			break;	//  DEVICE_ID_IO4KUFC

		case DEVICE_ID_CORVID88:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_CORVID88
			break;	//  DEVICE_ID_CORVID88

		case DEVICE_ID_KONA4:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
				case NTV2_FBF_10BIT_RAW_RGB:
				case NTV2_FBF_10BIT_RAW_YCBCR:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONA4
			break;	//  DEVICE_ID_KONA4

		case DEVICE_ID_KONA4UFC:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONA4UFC
			break;	//  DEVICE_ID_KONA4UFC

		case DEVICE_ID_CORVID44:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_8BIT_YCBCR_420PL3:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_422PL3:
				case NTV2_FBF_10BIT_YCBCR_420PL3_LE:
				case NTV2_FBF_10BIT_YCBCR_422PL3_LE:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_CORVID44
			break;	//  DEVICE_ID_CORVID44

		case DEVICE_ID_CORVIDHEVC:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_YCBCR_420PL2:
				case NTV2_FBF_10BIT_YCBCR_422PL2:
				case NTV2_FBF_8BIT_YCBCR_420PL2:
				case NTV2_FBF_8BIT_YCBCR_422PL2:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_CORVIDHEVC
			break;	//  DEVICE_ID_CORVIDHEVC

		case DEVICE_ID_CORVIDHBR:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_8BIT_DVCPRO:
				case NTV2_FBF_8BIT_HDV:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_CORVIDHBR
			break;	//  DEVICE_ID_CORVIDHBR

		case DEVICE_ID_KONAIP_2022:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
				case NTV2_FBF_10BIT_RAW_RGB:
				case NTV2_FBF_10BIT_RAW_YCBCR:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONAIP_2022
			break;	//  DEVICE_ID_KONAIP_2022

		case DEVICE_ID_KONAIP_4CH_2SFP:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
				case NTV2_FBF_10BIT_RAW_RGB:
				case NTV2_FBF_10BIT_RAW_YCBCR:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONAIP_4CH_2SFP
			break;	//  DEVICE_ID_KONAIP_4CH_2SFP

		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
				case NTV2_FBF_10BIT_RAW_RGB:
				case NTV2_FBF_10BIT_RAW_YCBCR:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K

		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
				case NTV2_FBF_10BIT_RAW_RGB:
				case NTV2_FBF_10BIT_RAW_YCBCR:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONAIP_2TX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_2TX_1SFP_J2K

		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
				case NTV2_FBF_10BIT_RAW_RGB:
				case NTV2_FBF_10BIT_RAW_YCBCR:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONAIP_2RX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_2RX_1SFP_J2K

		case DEVICE_ID_KONAIP_1RX_1TX_2110:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
				case NTV2_FBF_10BIT_RAW_RGB:
				case NTV2_FBF_10BIT_RAW_YCBCR:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONAIP_1RX_1TX_2110
			break;	//  DEVICE_ID_KONAIP_1RX_1TX_2110

		case DEVICE_ID_IO4KPLUS:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_IO4KPLUS
			break;	//  DEVICE_ID_IO4KPLUS

		case DEVICE_ID_IOIP_2022:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_IOIP_2022
			break;	//  DEVICE_ID_IOIP_2022

		case DEVICE_ID_IOIP_2110:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_IOIP_2110
			break;	//  DEVICE_ID_IOIP_2110

		case DEVICE_ID_KONAIP_2110:
			switch (inFBFormat)
			{
				case NTV2_FBF_10BIT_YCBCR:
				case NTV2_FBF_8BIT_YCBCR:
				case NTV2_FBF_ARGB:
				case NTV2_FBF_RGBA:
				case NTV2_FBF_10BIT_RGB:
				case NTV2_FBF_8BIT_YCBCR_YUY2:
				case NTV2_FBF_ABGR:
				case NTV2_FBF_10BIT_DPX:
				case NTV2_FBF_24BIT_RGB:
				case NTV2_FBF_24BIT_BGR:
				case NTV2_FBF_10BIT_DPX_LE:
				case NTV2_FBF_48BIT_RGB:
				case NTV2_FBF_10BIT_RAW_RGB:
				case NTV2_FBF_10BIT_RAW_YCBCR:
					return true;
				default:
					break;
			}	//  switch on inFBFormat for device DEVICE_ID_KONAIP_2110
			break;	//  DEVICE_ID_KONAIP_2110

		default:
			break;
	}	//  switch on device ID

	return false;

}	//  NTV2DeviceCanDoFrameBufferFormat (auto-generated)


/**
	NTV2DeviceCanDoWidget
**/
bool NTV2DeviceCanDoWidget (const NTV2DeviceID inDeviceID, const NTV2WidgetID inWidgetID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtSDIIn1:
				case NTV2_WgtSDIOut1:
				case NTV2_WgtGenLock:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_CORVID1
			break;	//  DEVICE_ID_CORVID1

		case DEVICE_ID_CORVID3G:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_CORVID3G
			break;	//  DEVICE_ID_CORVID3G

		case DEVICE_ID_KONALHI:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_WgtFrameSync1:
				case NTV2_WgtFrameSync2:
				case NTV2_WgtSDIIn1:
				case NTV2_WgtSDIIn2:
				case NTV2_WgtSDIOut1:
				case NTV2_WgtSDIOut2:
				case NTV2_WgtAnalogIn1:
				case NTV2_WgtAnalogOut1:
				case NTV2_WgtHDMIIn1:
				case NTV2_WgtHDMIOut1:
				case NTV2_WgtUpDownConverter1:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONALHI
			break;	//  DEVICE_ID_KONALHI

		case DEVICE_ID_KONALHIDVI:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_WgtFrameSync1:
				case NTV2_WgtFrameSync2:
				case NTV2_WgtSDIIn1:
				case NTV2_WgtSDIIn2:
				case NTV2_WgtSDIOut1:
				case NTV2_WgtSDIOut2:
				case NTV2_WgtAnalogIn1:
				case NTV2_WgtAnalogOut1:
				case NTV2_WgtHDMIIn1:
				case NTV2_WgtHDMIOut1:
				case NTV2_WgtUpDownConverter1:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONALHIDVI
			break;	//  DEVICE_ID_KONALHIDVI

		case DEVICE_ID_KONALHEPLUS:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtCSC1:
				case NTV2_WgtLUT1:
				case NTV2_WgtSDIIn1:
				case NTV2_WgtSDIOut1:
				case NTV2_WgtSDIOut2:
				case NTV2_WgtAnalogIn1:
				case NTV2_WgtAnalogOut1:
				case NTV2_WgtUpDownConverter1:
				case NTV2_WgtMixer1:
				case NTV2_WgtCompression1:
				case NTV2_WgtGenLock:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONALHEPLUS
			break;	//  DEVICE_ID_KONALHEPLUS

		case DEVICE_ID_IOEXPRESS:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameSync1:
				case NTV2_WgtFrameSync2:
				case NTV2_WgtSDIIn1:
				case NTV2_WgtSDIOut1:
				case NTV2_WgtAnalogOut1:
				case NTV2_WgtHDMIIn1:
				case NTV2_WgtHDMIOut1:
				case NTV2_WgtUpDownConverter1:
				case NTV2_WgtCompression1:
				case NTV2_WgtGenLock:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_IOEXPRESS
			break;	//  DEVICE_ID_IOEXPRESS

		case DEVICE_ID_CORVID22:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_CORVID22
			break;	//  DEVICE_ID_CORVID22

		case DEVICE_ID_KONA3G:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtAnalogOut1:
				case NTV2_WgtHDMIOut1:
				case NTV2_WgtUpDownConverter1:
				case NTV2_WgtMixer1:
				case NTV2_WgtCompression1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONA3G
			break;	//  DEVICE_ID_KONA3G

		case DEVICE_ID_KONA3GQUAD:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtAnalogOut1:
				case NTV2_WgtHDMIOut1:
				case NTV2_WgtMixer1:
				case NTV2_WgtCompression1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONA3GQUAD
			break;	//  DEVICE_ID_KONA3GQUAD

		case DEVICE_ID_CORVID24:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_CORVID24
			break;	//  DEVICE_ID_CORVID24

		case DEVICE_ID_IOXT:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtAnalogOut1:
				case NTV2_WgtHDMIIn1:
				case NTV2_WgtHDMIOut1:
				case NTV2_WgtUpDownConverter1:
				case NTV2_WgtMixer1:
				case NTV2_WgtCompression1:
				case NTV2_WgtGenLock:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_IOXT
			break;	//  DEVICE_ID_IOXT

		case DEVICE_ID_TTAP:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtSDIOut1:
				case NTV2_WgtHDMIOut1:
				case NTV2_WgtCompression1:
				case NTV2_WgtGenLock:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_TTAP
			break;	//  DEVICE_ID_TTAP

		case DEVICE_ID_IO4K:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtHDMIIn1v2:
				case NTV2_WgtHDMIOut1v2:
				case NTV2_WgtSDIMonOut1:
				case NTV2_WgtCSC5:
				case NTV2_WgtLUT5:
				case NTV2_WgtDualLinkV2Out5:
				case NTV2_Wgt4KDownConverter:
				case NTV2_Wgt425Mux1:
				case NTV2_Wgt425Mux2:
				case NTV2_Wgt425Mux3:
				case NTV2_Wgt425Mux4:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_IO4K
			break;	//  DEVICE_ID_IO4K

		case DEVICE_ID_IO4KUFC:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtUpDownConverter1:
				case NTV2_WgtMixer1:
				case NTV2_WgtCompression1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtSDIMonOut1:
				case NTV2_WgtCSC5:
				case NTV2_WgtLUT5:
				case NTV2_WgtDualLinkV2Out5:
				case NTV2_WgtHDMIIn1v3:
				case NTV2_WgtHDMIOut1v3:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_IO4KUFC
			break;	//  DEVICE_ID_IO4KUFC

		case DEVICE_ID_CORVID88:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtCSC5:
				case NTV2_WgtLUT5:
				case NTV2_WgtDualLinkV2Out5:
				case NTV2_Wgt3GSDIIn5:
				case NTV2_Wgt3GSDIIn6:
				case NTV2_Wgt3GSDIIn7:
				case NTV2_Wgt3GSDIIn8:
				case NTV2_Wgt3GSDIOut5:
				case NTV2_Wgt3GSDIOut6:
				case NTV2_Wgt3GSDIOut7:
				case NTV2_Wgt3GSDIOut8:
				case NTV2_WgtDualLinkV2In5:
				case NTV2_WgtDualLinkV2In6:
				case NTV2_WgtDualLinkV2In7:
				case NTV2_WgtDualLinkV2In8:
				case NTV2_WgtDualLinkV2Out6:
				case NTV2_WgtDualLinkV2Out7:
				case NTV2_WgtDualLinkV2Out8:
				case NTV2_WgtCSC6:
				case NTV2_WgtCSC7:
				case NTV2_WgtCSC8:
				case NTV2_WgtLUT6:
				case NTV2_WgtLUT7:
				case NTV2_WgtLUT8:
				case NTV2_WgtMixer3:
				case NTV2_WgtMixer4:
				case NTV2_WgtFrameBuffer5:
				case NTV2_WgtFrameBuffer6:
				case NTV2_WgtFrameBuffer7:
				case NTV2_WgtFrameBuffer8:
				case NTV2_Wgt425Mux1:
				case NTV2_Wgt425Mux2:
				case NTV2_Wgt425Mux3:
				case NTV2_Wgt425Mux4:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_CORVID88
			break;	//  DEVICE_ID_CORVID88

		case DEVICE_ID_KONA4:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtAnalogOut1:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtHDMIOut1v2:
				case NTV2_WgtCSC5:
				case NTV2_WgtLUT5:
				case NTV2_Wgt4KDownConverter:
				case NTV2_Wgt425Mux1:
				case NTV2_Wgt425Mux2:
				case NTV2_Wgt425Mux3:
				case NTV2_Wgt425Mux4:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONA4
			break;	//  DEVICE_ID_KONA4

		case DEVICE_ID_KONA4UFC:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtAnalogOut1:
				case NTV2_WgtUpDownConverter1:
				case NTV2_WgtMixer1:
				case NTV2_WgtCompression1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtDualLinkV2Out5:
				case NTV2_WgtHDMIOut1v3:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONA4UFC
			break;	//  DEVICE_ID_KONA4UFC

		case DEVICE_ID_CORVID44:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_Wgt425Mux1:
				case NTV2_Wgt425Mux2:
				case NTV2_Wgt425Mux3:
				case NTV2_Wgt425Mux4:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_CORVID44
			break;	//  DEVICE_ID_CORVID44

		case DEVICE_ID_CORVIDHEVC:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_Wgt3GSDIOut5:
				case NTV2_Wgt3GSDIOut6:
				case NTV2_Wgt3GSDIOut7:
				case NTV2_Wgt3GSDIOut8:
				case NTV2_WgtMixer3:
				case NTV2_WgtMixer4:
				case NTV2_WgtFrameBuffer5:
				case NTV2_WgtFrameBuffer6:
				case NTV2_WgtFrameBuffer7:
				case NTV2_WgtFrameBuffer8:
				case NTV2_Wgt425Mux1:
				case NTV2_Wgt425Mux2:
				case NTV2_Wgt425Mux3:
				case NTV2_Wgt425Mux4:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_CORVIDHEVC
			break;	//  DEVICE_ID_CORVIDHEVC

		case DEVICE_ID_CORVIDHBR:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtHDMIIn1v2:
				case NTV2_Wgt4KDownConverter:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_CORVIDHBR
			break;	//  DEVICE_ID_CORVIDHBR

		case DEVICE_ID_KONAIP_2022:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtCSC5:
				case NTV2_WgtLUT5:
				case NTV2_WgtHDMIOut1v3:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONAIP_2022
			break;	//  DEVICE_ID_KONAIP_2022

		case DEVICE_ID_KONAIP_4CH_2SFP:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtCSC5:
				case NTV2_WgtLUT5:
				case NTV2_WgtHDMIOut1v3:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONAIP_4CH_2SFP
			break;	//  DEVICE_ID_KONAIP_4CH_2SFP

		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtHDMIOut1v3:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K

		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtHDMIOut1v3:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONAIP_2TX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_2TX_1SFP_J2K

		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtHDMIOut1v3:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONAIP_2RX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_2RX_1SFP_J2K

		case DEVICE_ID_KONAIP_1RX_1TX_2110:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtHDMIOut1v3:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONAIP_1RX_1TX_2110
			break;	//  DEVICE_ID_KONAIP_1RX_1TX_2110

		case DEVICE_ID_IO4KPLUS:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtSDIMonOut1:
				case NTV2_WgtCSC5:
				case NTV2_WgtLUT5:
				case NTV2_WgtDualLinkV2Out5:
				case NTV2_Wgt4KDownConverter:
				case NTV2_Wgt425Mux1:
				case NTV2_Wgt425Mux2:
				case NTV2_Wgt425Mux3:
				case NTV2_Wgt425Mux4:
				case NTV2_Wgt12GSDIIn1:
				case NTV2_Wgt12GSDIOut3:
				case NTV2_WgtHDMIIn1v4:
				case NTV2_WgtHDMIOut1v4:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_IO4KPLUS
			break;	//  DEVICE_ID_IO4KPLUS

		case DEVICE_ID_IOIP_2022:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtSDIMonOut1:
				case NTV2_WgtCSC5:
				case NTV2_WgtLUT5:
				case NTV2_WgtDualLinkV2Out5:
				case NTV2_Wgt4KDownConverter:
				case NTV2_Wgt425Mux1:
				case NTV2_Wgt425Mux2:
				case NTV2_Wgt425Mux3:
				case NTV2_Wgt425Mux4:
				case NTV2_WgtHDMIOut1v4:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_IOIP_2022
			break;	//  DEVICE_ID_IOIP_2022

		case DEVICE_ID_IOIP_2110:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIIn2:
				case NTV2_Wgt3GSDIIn3:
				case NTV2_Wgt3GSDIIn4:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2In1:
				case NTV2_WgtDualLinkV2In2:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2In3:
				case NTV2_WgtDualLinkV2In4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtSDIMonOut1:
				case NTV2_WgtCSC5:
				case NTV2_WgtLUT5:
				case NTV2_WgtDualLinkV2Out5:
				case NTV2_Wgt4KDownConverter:
				case NTV2_Wgt425Mux1:
				case NTV2_Wgt425Mux2:
				case NTV2_Wgt425Mux3:
				case NTV2_Wgt425Mux4:
				case NTV2_WgtHDMIOut1v4:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_IOIP_2110
			break;	//  DEVICE_ID_IOIP_2110

		case DEVICE_ID_KONAIP_2110:
			switch (inWidgetID)
			{
				case NTV2_WgtFrameBuffer1:
				case NTV2_WgtFrameBuffer2:
				case NTV2_WgtFrameBuffer3:
				case NTV2_WgtFrameBuffer4:
				case NTV2_WgtCSC1:
				case NTV2_WgtCSC2:
				case NTV2_WgtLUT1:
				case NTV2_WgtLUT2:
				case NTV2_Wgt3GSDIIn1:
				case NTV2_Wgt3GSDIOut1:
				case NTV2_Wgt3GSDIOut2:
				case NTV2_Wgt3GSDIOut3:
				case NTV2_Wgt3GSDIOut4:
				case NTV2_WgtDualLinkV2Out1:
				case NTV2_WgtDualLinkV2Out2:
				case NTV2_WgtMixer1:
				case NTV2_WgtGenLock:
				case NTV2_WgtMixer2:
				case NTV2_WgtLUT3:
				case NTV2_WgtLUT4:
				case NTV2_WgtDualLinkV2Out3:
				case NTV2_WgtDualLinkV2Out4:
				case NTV2_WgtCSC3:
				case NTV2_WgtCSC4:
				case NTV2_WgtHDMIOut1v3:
					return true;
				default:
					break;
			}	//  switch on inWidgetID for device DEVICE_ID_KONAIP_2110
			break;	//  DEVICE_ID_KONAIP_2110

		default:
			break;
	}	//  switch on device ID

	return false;

}	//  NTV2DeviceCanDoWidget (auto-generated)


/**
	NTV2DeviceCanDoConversionMode
**/
bool NTV2DeviceCanDoConversionMode (const NTV2DeviceID inDeviceID, const NTV2ConversionMode inConversionMode)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
			switch (inConversionMode)
			{
				case NTV2_1080i_5994to525_5994:
				case NTV2_1080i_2500to625_2500:
				case NTV2_720p_5994to525_5994:
				case NTV2_720p_5000to625_2500:
				case NTV2_525_5994to1080i_5994:
				case NTV2_525_5994to720p_5994:
				case NTV2_625_2500to1080i_2500:
				case NTV2_625_2500to720p_5000:
				case NTV2_720p_5000to1080i_2500:
				case NTV2_720p_5994to1080i_5994:
				case NTV2_720p_6000to1080i_3000:
				case NTV2_1080i2398to525_2398:
				case NTV2_1080i2398to525_2997:
				case NTV2_1080i2400to525_2400:
				case NTV2_1080p2398to525_2398:
				case NTV2_1080p2398to525_2997:
				case NTV2_1080p2400to525_2400:
				case NTV2_1080i_2500to720p_5000:
				case NTV2_1080i_5994to720p_5994:
				case NTV2_1080i_3000to720p_6000:
				case NTV2_1080i_2398to720p_2398:
				case NTV2_720p_2398to1080i_2398:
				case NTV2_525_2398to1080i_2398:
				case NTV2_525_5994to525_5994:
				case NTV2_625_2500to625_2500:
				case NTV2_525_5994to525psf_2997:
				case NTV2_625_5000to625psf_2500:
					return true;
				default:
					break;
			}	//  switch on inConversionMode for device DEVICE_ID_KONALHI
			break;	//  DEVICE_ID_KONALHI

		case DEVICE_ID_KONALHIDVI:
			switch (inConversionMode)
			{
				case NTV2_1080i_5994to525_5994:
				case NTV2_1080i_2500to625_2500:
				case NTV2_720p_5994to525_5994:
				case NTV2_720p_5000to625_2500:
				case NTV2_525_5994to1080i_5994:
				case NTV2_525_5994to720p_5994:
				case NTV2_625_2500to1080i_2500:
				case NTV2_625_2500to720p_5000:
				case NTV2_720p_5000to1080i_2500:
				case NTV2_720p_5994to1080i_5994:
				case NTV2_720p_6000to1080i_3000:
				case NTV2_1080i2398to525_2398:
				case NTV2_1080i2398to525_2997:
				case NTV2_1080i2400to525_2400:
				case NTV2_1080p2398to525_2398:
				case NTV2_1080p2398to525_2997:
				case NTV2_1080p2400to525_2400:
				case NTV2_1080i_2500to720p_5000:
				case NTV2_1080i_5994to720p_5994:
				case NTV2_1080i_3000to720p_6000:
				case NTV2_1080i_2398to720p_2398:
				case NTV2_720p_2398to1080i_2398:
				case NTV2_525_2398to1080i_2398:
				case NTV2_525_5994to525_5994:
				case NTV2_625_2500to625_2500:
				case NTV2_525_5994to525psf_2997:
				case NTV2_625_5000to625psf_2500:
					return true;
				default:
					break;
			}	//  switch on inConversionMode for device DEVICE_ID_KONALHIDVI
			break;	//  DEVICE_ID_KONALHIDVI

		case DEVICE_ID_KONALHEPLUS:
			switch (inConversionMode)
			{
				case NTV2_1080i_5994to525_5994:
				case NTV2_1080i_2500to625_2500:
				case NTV2_720p_5994to525_5994:
				case NTV2_720p_5000to625_2500:
				case NTV2_1080i2398to525_2997:
					return true;
				default:
					break;
			}	//  switch on inConversionMode for device DEVICE_ID_KONALHEPLUS
			break;	//  DEVICE_ID_KONALHEPLUS

		case DEVICE_ID_IOEXPRESS:
			switch (inConversionMode)
			{
				case NTV2_1080i_5994to525_5994:
				case NTV2_1080i_2500to625_2500:
				case NTV2_720p_5994to525_5994:
				case NTV2_720p_5000to625_2500:
				case NTV2_1080i2398to525_2997:
					return true;
				default:
					break;
			}	//  switch on inConversionMode for device DEVICE_ID_IOEXPRESS
			break;	//  DEVICE_ID_IOEXPRESS

		case DEVICE_ID_KONA3G:
			switch (inConversionMode)
			{
				case NTV2_1080i_5994to525_5994:
				case NTV2_1080i_2500to625_2500:
				case NTV2_720p_5994to525_5994:
				case NTV2_720p_5000to625_2500:
				case NTV2_525_5994to1080i_5994:
				case NTV2_525_5994to720p_5994:
				case NTV2_625_2500to1080i_2500:
				case NTV2_625_2500to720p_5000:
				case NTV2_720p_5000to1080i_2500:
				case NTV2_720p_5994to1080i_5994:
				case NTV2_720p_6000to1080i_3000:
				case NTV2_1080i2398to525_2398:
				case NTV2_1080i2398to525_2997:
				case NTV2_1080i2400to525_2400:
				case NTV2_1080p2398to525_2398:
				case NTV2_1080p2398to525_2997:
				case NTV2_1080p2400to525_2400:
				case NTV2_1080i_2500to720p_5000:
				case NTV2_1080i_5994to720p_5994:
				case NTV2_1080i_3000to720p_6000:
				case NTV2_1080i_2398to720p_2398:
				case NTV2_720p_2398to1080i_2398:
				case NTV2_525_2398to1080i_2398:
				case NTV2_525_5994to525_5994:
				case NTV2_625_2500to625_2500:
				case NTV2_525_5994to525psf_2997:
				case NTV2_625_5000to625psf_2500:
				case NTV2_1080i_5000to1080psf_2500:
				case NTV2_1080i_5994to1080psf_2997:
				case NTV2_1080i_6000to1080psf_3000:
					return true;
				default:
					break;
			}	//  switch on inConversionMode for device DEVICE_ID_KONA3G
			break;	//  DEVICE_ID_KONA3G

		case DEVICE_ID_IOXT:
			switch (inConversionMode)
			{
				case NTV2_1080i_5994to525_5994:
				case NTV2_1080i_2500to625_2500:
				case NTV2_720p_5994to525_5994:
				case NTV2_720p_5000to625_2500:
				case NTV2_525_5994to1080i_5994:
				case NTV2_525_5994to720p_5994:
				case NTV2_625_2500to1080i_2500:
				case NTV2_625_2500to720p_5000:
				case NTV2_720p_5000to1080i_2500:
				case NTV2_720p_5994to1080i_5994:
				case NTV2_720p_6000to1080i_3000:
				case NTV2_1080i2398to525_2398:
				case NTV2_1080i2398to525_2997:
				case NTV2_1080i2400to525_2400:
				case NTV2_1080p2398to525_2398:
				case NTV2_1080p2398to525_2997:
				case NTV2_1080p2400to525_2400:
				case NTV2_1080i_2500to720p_5000:
				case NTV2_1080i_5994to720p_5994:
				case NTV2_1080i_3000to720p_6000:
				case NTV2_1080i_2398to720p_2398:
				case NTV2_720p_2398to1080i_2398:
				case NTV2_525_2398to1080i_2398:
				case NTV2_525_5994to525_5994:
				case NTV2_625_2500to625_2500:
				case NTV2_525_5994to525psf_2997:
				case NTV2_625_5000to625psf_2500:
					return true;
				default:
					break;
			}	//  switch on inConversionMode for device DEVICE_ID_IOXT
			break;	//  DEVICE_ID_IOXT

		case DEVICE_ID_IO4KUFC:
			switch (inConversionMode)
			{
				case NTV2_1080i_5994to525_5994:
				case NTV2_1080i_2500to625_2500:
				case NTV2_720p_5994to525_5994:
				case NTV2_720p_5000to625_2500:
				case NTV2_525_5994to1080i_5994:
				case NTV2_525_5994to720p_5994:
				case NTV2_625_2500to1080i_2500:
				case NTV2_625_2500to720p_5000:
				case NTV2_720p_5000to1080i_2500:
				case NTV2_720p_5994to1080i_5994:
				case NTV2_720p_6000to1080i_3000:
				case NTV2_1080i2398to525_2398:
				case NTV2_1080i2398to525_2997:
				case NTV2_1080i2400to525_2400:
				case NTV2_1080p2398to525_2398:
				case NTV2_1080p2398to525_2997:
				case NTV2_1080p2400to525_2400:
				case NTV2_1080i_2500to720p_5000:
				case NTV2_1080i_5994to720p_5994:
				case NTV2_1080i_3000to720p_6000:
				case NTV2_1080i_2398to720p_2398:
				case NTV2_720p_2398to1080i_2398:
				case NTV2_525_2398to1080i_2398:
				case NTV2_525_5994to525_5994:
				case NTV2_625_2500to625_2500:
				case NTV2_525_5994to525psf_2997:
				case NTV2_625_5000to625psf_2500:
				case NTV2_1080i_5000to1080psf_2500:
				case NTV2_1080i_5994to1080psf_2997:
				case NTV2_1080i_6000to1080psf_3000:
					return true;
				default:
					break;
			}	//  switch on inConversionMode for device DEVICE_ID_IO4KUFC
			break;	//  DEVICE_ID_IO4KUFC

		case DEVICE_ID_KONA4UFC:
			switch (inConversionMode)
			{
				case NTV2_1080i_5994to525_5994:
				case NTV2_1080i_2500to625_2500:
				case NTV2_720p_5994to525_5994:
				case NTV2_720p_5000to625_2500:
				case NTV2_525_5994to1080i_5994:
				case NTV2_525_5994to720p_5994:
				case NTV2_625_2500to1080i_2500:
				case NTV2_625_2500to720p_5000:
				case NTV2_720p_5000to1080i_2500:
				case NTV2_720p_5994to1080i_5994:
				case NTV2_720p_6000to1080i_3000:
				case NTV2_1080i2398to525_2398:
				case NTV2_1080i2398to525_2997:
				case NTV2_1080i2400to525_2400:
				case NTV2_1080p2398to525_2398:
				case NTV2_1080p2398to525_2997:
				case NTV2_1080p2400to525_2400:
				case NTV2_1080i_2500to720p_5000:
				case NTV2_1080i_5994to720p_5994:
				case NTV2_1080i_3000to720p_6000:
				case NTV2_1080i_2398to720p_2398:
				case NTV2_720p_2398to1080i_2398:
				case NTV2_525_2398to1080i_2398:
				case NTV2_525_5994to525_5994:
				case NTV2_625_2500to625_2500:
				case NTV2_525_5994to525psf_2997:
				case NTV2_625_5000to625psf_2500:
				case NTV2_1080i_5000to1080psf_2500:
				case NTV2_1080i_5994to1080psf_2997:
				case NTV2_1080i_6000to1080psf_3000:
					return true;
				default:
					break;
			}	//  switch on inConversionMode for device DEVICE_ID_KONA4UFC
			break;	//  DEVICE_ID_KONA4UFC

		default:
			break;
	}	//  switch on device ID

	return false;

}	//  NTV2DeviceCanDoConversionMode (auto-generated)


/**
	NTV2DeviceCanDoDSKMode
**/
bool NTV2DeviceCanDoDSKMode (const NTV2DeviceID inDeviceID, const NTV2DSKMode inDSKMode)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID3G:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_CORVID3G
			break;	//  DEVICE_ID_CORVID3G

		case DEVICE_ID_KONALHI:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONALHI
			break;	//  DEVICE_ID_KONALHI

		case DEVICE_ID_KONALHIDVI:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONALHIDVI
			break;	//  DEVICE_ID_KONALHIDVI

		case DEVICE_ID_KONALHEPLUS:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONALHEPLUS
			break;	//  DEVICE_ID_KONALHEPLUS

		case DEVICE_ID_CORVID22:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_CORVID22
			break;	//  DEVICE_ID_CORVID22

		case DEVICE_ID_KONA3G:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONA3G
			break;	//  DEVICE_ID_KONA3G

		case DEVICE_ID_KONA3GQUAD:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONA3GQUAD
			break;	//  DEVICE_ID_KONA3GQUAD

		case DEVICE_ID_CORVID24:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_CORVID24
			break;	//  DEVICE_ID_CORVID24

		case DEVICE_ID_IOXT:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_IOXT
			break;	//  DEVICE_ID_IOXT

		case DEVICE_ID_IO4K:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_IO4K
			break;	//  DEVICE_ID_IO4K

		case DEVICE_ID_IO4KUFC:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_IO4KUFC
			break;	//  DEVICE_ID_IO4KUFC

		case DEVICE_ID_CORVID88:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_CORVID88
			break;	//  DEVICE_ID_CORVID88

		case DEVICE_ID_KONA4:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONA4
			break;	//  DEVICE_ID_KONA4

		case DEVICE_ID_KONA4UFC:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONA4UFC
			break;	//  DEVICE_ID_KONA4UFC

		case DEVICE_ID_CORVID44:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_CORVID44
			break;	//  DEVICE_ID_CORVID44

		case DEVICE_ID_KONAIP_2022:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONAIP_2022
			break;	//  DEVICE_ID_KONAIP_2022

		case DEVICE_ID_KONAIP_4CH_2SFP:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONAIP_4CH_2SFP
			break;	//  DEVICE_ID_KONAIP_4CH_2SFP

		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K

		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONAIP_2TX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_2TX_1SFP_J2K

		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONAIP_2RX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_2RX_1SFP_J2K

		case DEVICE_ID_KONAIP_1RX_1TX_2110:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONAIP_1RX_1TX_2110
			break;	//  DEVICE_ID_KONAIP_1RX_1TX_2110

		case DEVICE_ID_IO4KPLUS:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_IO4KPLUS
			break;	//  DEVICE_ID_IO4KPLUS

		case DEVICE_ID_IOIP_2022:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_IOIP_2022
			break;	//  DEVICE_ID_IOIP_2022

		case DEVICE_ID_IOIP_2110:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_IOIP_2110
			break;	//  DEVICE_ID_IOIP_2110

		case DEVICE_ID_KONAIP_2110:
			switch (inDSKMode)
			{
				case NTV2_DSKModeOff:
				case NTV2_DSKModeFBOverMatte:
				case NTV2_DSKModeFBOverVideoIn:
				case NTV2_DSKModeGraphicOverMatte:
				case NTV2_DSKModeGraphicOverVideoIn:
				case NTV2_DSKModeGraphicOverFB:
					return true;
				default:
					break;
			}	//  switch on inDSKMode for device DEVICE_ID_KONAIP_2110
			break;	//  DEVICE_ID_KONAIP_2110

		default:
			break;
	}	//  switch on device ID

	return false;

}	//  NTV2DeviceCanDoDSKMode (auto-generated)


/**
	NTV2DeviceCanDoInputSource
**/
bool NTV2DeviceCanDoInputSource (const NTV2DeviceID inDeviceID, const NTV2InputSource inInputSource)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_CORVID1
			break;	//  DEVICE_ID_CORVID1

		case DEVICE_ID_CORVID3G:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_CORVID3G
			break;	//  DEVICE_ID_CORVID3G

		case DEVICE_ID_KONALHI:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_ANALOG:
				case NTV2_INPUTSOURCE_HDMI:
				case NTV2_INPUTSOURCE_SDI1:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONALHI
			break;	//  DEVICE_ID_KONALHI

		case DEVICE_ID_KONALHIDVI:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_ANALOG:
				case NTV2_INPUTSOURCE_HDMI:
				case NTV2_INPUTSOURCE_SDI1:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONALHIDVI
			break;	//  DEVICE_ID_KONALHIDVI

		case DEVICE_ID_KONALHEPLUS:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_ANALOG:
				case NTV2_INPUTSOURCE_SDI1:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONALHEPLUS
			break;	//  DEVICE_ID_KONALHEPLUS

		case DEVICE_ID_IOEXPRESS:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_HDMI:
				case NTV2_INPUTSOURCE_SDI1:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_IOEXPRESS
			break;	//  DEVICE_ID_IOEXPRESS

		case DEVICE_ID_CORVID22:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_CORVID22
			break;	//  DEVICE_ID_CORVID22

		case DEVICE_ID_KONA3G:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONA3G
			break;	//  DEVICE_ID_KONA3G

		case DEVICE_ID_KONA3GQUAD:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONA3GQUAD
			break;	//  DEVICE_ID_KONA3GQUAD

		case DEVICE_ID_CORVID24:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_CORVID24
			break;	//  DEVICE_ID_CORVID24

		case DEVICE_ID_IOXT:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_HDMI:
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_IOXT
			break;	//  DEVICE_ID_IOXT

		case DEVICE_ID_IO4K:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_HDMI:
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_IO4K
			break;	//  DEVICE_ID_IO4K

		case DEVICE_ID_IO4KUFC:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_HDMI:
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_IO4KUFC
			break;	//  DEVICE_ID_IO4KUFC

		case DEVICE_ID_CORVID88:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
				case NTV2_INPUTSOURCE_SDI5:
				case NTV2_INPUTSOURCE_SDI6:
				case NTV2_INPUTSOURCE_SDI7:
				case NTV2_INPUTSOURCE_SDI8:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
				case NTV2_INPUTSOURCE_DUALLINK5:
				case NTV2_INPUTSOURCE_DUALLINK6:
				case NTV2_INPUTSOURCE_DUALLINK7:
				case NTV2_INPUTSOURCE_DUALLINK8:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_CORVID88
			break;	//  DEVICE_ID_CORVID88

		case DEVICE_ID_KONA4:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONA4
			break;	//  DEVICE_ID_KONA4

		case DEVICE_ID_KONA4UFC:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONA4UFC
			break;	//  DEVICE_ID_KONA4UFC

		case DEVICE_ID_CORVID44:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_CORVID44
			break;	//  DEVICE_ID_CORVID44

		case DEVICE_ID_CORVIDHEVC:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_CORVIDHEVC
			break;	//  DEVICE_ID_CORVIDHEVC

		case DEVICE_ID_CORVIDHBR:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_HDMI:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_CORVIDHBR
			break;	//  DEVICE_ID_CORVIDHBR

		case DEVICE_ID_KONAIP_2022:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONAIP_2022
			break;	//  DEVICE_ID_KONAIP_2022

		case DEVICE_ID_KONAIP_4CH_2SFP:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONAIP_4CH_2SFP
			break;	//  DEVICE_ID_KONAIP_4CH_2SFP

		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K

		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONAIP_2RX_1SFP_J2K
			break;	//  DEVICE_ID_KONAIP_2RX_1SFP_J2K

		case DEVICE_ID_KONAIP_1RX_1TX_2110:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONAIP_1RX_1TX_2110
			break;	//  DEVICE_ID_KONAIP_1RX_1TX_2110

		case DEVICE_ID_IO4KPLUS:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_HDMI:
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_IO4KPLUS
			break;	//  DEVICE_ID_IO4KPLUS

		case DEVICE_ID_IOIP_2022:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_IOIP_2022
			break;	//  DEVICE_ID_IOIP_2022

		case DEVICE_ID_IOIP_2110:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
				case NTV2_INPUTSOURCE_SDI2:
				case NTV2_INPUTSOURCE_SDI3:
				case NTV2_INPUTSOURCE_SDI4:
			#if !defined (NTV2_DEPRECATE)
				case NTV2_INPUTSOURCE_DUALLINK1:
				case NTV2_INPUTSOURCE_DUALLINK2:
				case NTV2_INPUTSOURCE_DUALLINK3:
				case NTV2_INPUTSOURCE_DUALLINK4:
			#endif	//	if !defined (NTV2_DEPRECATE)
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_IOIP_2110
			break;	//  DEVICE_ID_IOIP_2110

		case DEVICE_ID_KONAIP_2110:
			switch (inInputSource)
			{
				case NTV2_INPUTSOURCE_SDI1:
					return true;
				default:
					break;
			}	//  switch on inInputSource for device DEVICE_ID_KONAIP_2110
			break;	//  DEVICE_ID_KONAIP_2110

		default:
			break;
	}	//  switch on device ID

	return false;

}	//  NTV2DeviceCanDoInputSource (auto-generated)


/**
	NTV2DeviceCanChangeEmbeddedAudioClock
**/
bool NTV2DeviceCanChangeEmbeddedAudioClock (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanChangeEmbeddedAudioClock (auto-generated)


/**
	NTV2DeviceCanChangeFrameBufferSize
	Returns true if the device having the given ID does not have fixed frame buffer sizes.
**/
bool NTV2DeviceCanChangeFrameBufferSize (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanChangeFrameBufferSize (auto-generated)


/**
	NTV2DeviceCanDisableUFC
	Returns true if the device having the given ID has at least one UFC, and it can be disabled.
**/
bool NTV2DeviceCanDisableUFC (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONA3G:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDisableUFC (auto-generated)


/**
	NTV2DeviceCanDo2KVideo
	Returns true if the device having the given ID is capable of handling 2Kx1556 video.
**/
bool NTV2DeviceCanDo2KVideo (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDo2KVideo (auto-generated)


/**
	NTV2DeviceCanDo3GLevelConversion
	Returns true if the device having the given ID can perform 3G level B to 3G level A conversion.
**/
bool NTV2DeviceCanDo3GLevelConversion (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDo3GLevelConversion (auto-generated)


/**
	NTV2DeviceCanDoRGBLevelAConversion
	Returns true if the device having the given ID can do RGB over 3G Level A.
**/
bool NTV2DeviceCanDoRGBLevelAConversion (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoRGBLevelAConversion (auto-generated)


/**
	NTV2DeviceCanDo425Mux
	Returns true if the device having the given ID supports SMPTE 425 mux control.
**/
bool NTV2DeviceCanDo425Mux (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDo425Mux (auto-generated)


/**
	NTV2DeviceCanDo4KVideo
	Returns true if the device having the given ID can handle 4K/UHD video.
**/
bool NTV2DeviceCanDo4KVideo (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDo4KVideo (auto-generated)


/**
	NTV2DeviceCanDoAESAudioIn
	Returns true if the device having the given ID has at least one AES/EBU audio input.
**/
bool NTV2DeviceCanDoAESAudioIn (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoAESAudioIn (auto-generated)


/**
	NTV2DeviceCanDoAnalogAudio
	Returns true if the device having the given ID has at least one analog audio input or output.
**/
bool NTV2DeviceCanDoAnalogAudio (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoAnalogAudio (auto-generated)


/**
	NTV2DeviceCanDoAnalogVideoIn
	Returns true if the device having the given ID has at least one analog video input.
**/
bool NTV2DeviceCanDoAnalogVideoIn (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoAnalogVideoIn (auto-generated)


/**
	NTV2DeviceCanDoAnalogVideoOut
	Returns true if the device having the given ID has at least one analog video output.
**/
bool NTV2DeviceCanDoAnalogVideoOut (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoAnalogVideoOut (auto-generated)


/**
	NTV2DeviceCanDoAudio2Channels
	Returns true if the audio system(s) on the device having the given ID can be configured to embed/de-embed only 2 audio channels.
**/
bool NTV2DeviceCanDoAudio2Channels (const NTV2DeviceID inDeviceID)
{
	(void) inDeviceID;

	return false;

}	//  NTV2DeviceCanDoAudio2Channels (auto-generated)


/**
	NTV2DeviceCanDoAudio6Channels
	Returns true if the audio system(s) on the device having the given ID can be configured to embed/de-embed only 6 audio channels.
**/
bool NTV2DeviceCanDoAudio6Channels (const NTV2DeviceID inDeviceID)
{
	(void) inDeviceID;

	return false;

}	//  NTV2DeviceCanDoAudio6Channels (auto-generated)


/**
	NTV2DeviceCanDoAudio8Channels
	Returns true if the audio system(s) on the device having the given ID can be configured to embed/de-embed only 8 audio channels.
**/
bool NTV2DeviceCanDoAudio8Channels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoAudio8Channels (auto-generated)


/**
	NTV2DeviceCanDoAudio96K
	Returns true if audio system(s) on the device having the given ID can be set to a 96kHz sample rate.
**/
bool NTV2DeviceCanDoAudio96K (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoAudio96K (auto-generated)


/**
	NTV2DeviceCanDoAudioDelay
	Returns true if audio system(s) on the device having the given ID have an adjustable delay.
**/
bool NTV2DeviceCanDoAudioDelay (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoAudioDelay (auto-generated)


/**
	NTV2DeviceCanDoBreakoutBox
	Returns true if the device having the given ID can be connected to an AJA breakout box.
**/
bool NTV2DeviceCanDoBreakoutBox (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoBreakoutBox (auto-generated)


/**
	NTV2DeviceCanDoCapture
	Returns true if the device having the given ID can capture (ingest) video.
**/
bool NTV2DeviceCanDoCapture (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoCapture (auto-generated)


/**
	NTV2DeviceCanDoColorCorrection
	Returns true if the device having the given ID has at least one programmable LUT.
**/
bool NTV2DeviceCanDoColorCorrection (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoColorCorrection (auto-generated)


/**
	NTV2DeviceCanDoCustomAnc
	Returns true if the device having the given ID supports ANC insertion/extraction.
**/
bool NTV2DeviceCanDoCustomAnc (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoCustomAnc (auto-generated)


/**
	NTV2DeviceCanDoDSKOpacity
	Returns true if the device having the given ID has a mixer/keyer whose opacity is adjustable.
**/
bool NTV2DeviceCanDoDSKOpacity (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoDSKOpacity (auto-generated)


/**
	NTV2DeviceCanDoDualLink
	Returns true if the device having the given ID can input/output 10-bit RGB over 2-wire SDI.
**/
bool NTV2DeviceCanDoDualLink (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoDualLink (auto-generated)


/**
	NTV2DeviceCanDoDVCProHD
	Returns true if the device having the given ID can squeeze/stretch between 1920x1080/1280x1080 and 1280x720/960x720.
**/
bool NTV2DeviceCanDoDVCProHD (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_KONA4UFC:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoDVCProHD (auto-generated)


/**
	NTV2DeviceCanDoEnhancedCSC
	Returns true if the device having the given ID has enhanced color space converter capability.
**/
bool NTV2DeviceCanDoEnhancedCSC (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoEnhancedCSC (auto-generated)


/**
	NTV2DeviceCanDoFrameStore1Display
**/
bool NTV2DeviceCanDoFrameStore1Display (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoFrameStore1Display (auto-generated)


/**
	NTV2DeviceCanDoFreezeOutput
**/
bool NTV2DeviceCanDoFreezeOutput (const NTV2DeviceID inDeviceID)
{
	(void) inDeviceID;

	return false;

}	//  NTV2DeviceCanDoFreezeOutput (auto-generated)


/**
	NTV2DeviceCanDoHDMIOutStereo
	Returns true if the device having the given ID can handle 3D-stereo video output over HDMI.
**/
bool NTV2DeviceCanDoHDMIOutStereo (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoHDMIOutStereo (auto-generated)


/**
	NTV2DeviceCanDoHDV
	Returns true if the device having the given ID can squeeze/stretch between 1920x1080 and 1440x1080.
**/
bool NTV2DeviceCanDoHDV (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_KONA4UFC:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoHDV (auto-generated)


/**
	NTV2DeviceCanDoHDVideo
	Returns true if the device having the given ID can handle HD (High Definition) video.
**/
bool NTV2DeviceCanDoHDVideo (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoHDVideo (auto-generated)


/**
	NTV2DeviceCanDoIsoConvert
**/
bool NTV2DeviceCanDoIsoConvert (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_KONA4UFC:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoIsoConvert (auto-generated)


/**
	NTV2DeviceCanDoLTC
	Returns true if the device having the given ID can take in LTC (Linear TimeCode) from one of its inputs.
**/
bool NTV2DeviceCanDoLTC (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoLTC (auto-generated)


/**
	NTV2DeviceCanDoLTCInOnRefPort
	Returns true if the device having the given ID can read LTC (Linear TimeCode) from its reference input.
**/
bool NTV2DeviceCanDoLTCInOnRefPort (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoLTCInOnRefPort (auto-generated)


/**
	NTV2DeviceCanDoMSI
	Returns true if the DMA hardware on the device having the given ID supports MSI (Message Signaled Interrupts).
**/
bool NTV2DeviceCanDoMSI (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoMSI (auto-generated)


/**
	NTV2DeviceCanDoMultiFormat
	Returns true if the device having the given ID can simultaneously handle different video formats on more than one SDI input or output.
**/
bool NTV2DeviceCanDoMultiFormat (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoMultiFormat (auto-generated)


/**
	NTV2DeviceCanDoPCMControl
	Returns true if the audio system(s) on the device having the given ID can set the per-audio-channel-pair non-PCM (Pulse Code Modulation) bits in outgoing embedded audio.
**/
bool NTV2DeviceCanDoPCMControl (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoPCMControl (auto-generated)


/**
	NTV2DeviceCanDoPCMDetection
	Returns true if the device having the given ID has per-audio-channel-pair PCM detection capabilities.
**/
bool NTV2DeviceCanDoPCMDetection (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_CORVID44:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoPCMDetection (auto-generated)


/**
	NTV2DeviceCanDoPIO
	Returns true if the device having the given ID supports Programmed I/O.
**/
bool NTV2DeviceCanDoPIO (const NTV2DeviceID inDeviceID)
{
	(void) inDeviceID;

	return false;

}	//  NTV2DeviceCanDoPIO (auto-generated)


/**
	NTV2DeviceCanDoPlayback
	Returns true if the device having the given ID can output (play) video.
**/
bool NTV2DeviceCanDoPlayback (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoPlayback (auto-generated)


/**
	NTV2DeviceCanDoProgrammableCSC
	Returns true if the device having the given ID has at least one programmable color space converter widget.
**/
bool NTV2DeviceCanDoProgrammableCSC (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoProgrammableCSC (auto-generated)


/**
	NTV2DeviceCanDoProgrammableRS422
	Returns true if the device having the given ID has at least one RS-422 serial port, and it (they) can be programmed (for baud rate, parity, etc.).
**/
bool NTV2DeviceCanDoProgrammableRS422 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoProgrammableRS422 (auto-generated)


/**
	NTV2DeviceCanDoProRes
	Returns true if the device having the given ID can can accommodate Apple ProRes-compressed video in its frame buffers.
**/
bool NTV2DeviceCanDoProRes (const NTV2DeviceID inDeviceID)
{
	(void) inDeviceID;

	return false;

}	//  NTV2DeviceCanDoProRes (auto-generated)


/**
	NTV2DeviceCanDoQREZ
**/
bool NTV2DeviceCanDoQREZ (const NTV2DeviceID inDeviceID)
{
	(void) inDeviceID;

	return false;

}	//  NTV2DeviceCanDoQREZ (auto-generated)


/**
	NTV2DeviceCanDoQuarterExpand
	Returns true if the device having the given ID can handle quarter-sized frames (pixel-halving and line-halving during input, pixel-double and line-double during output).
**/
bool NTV2DeviceCanDoQuarterExpand (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoQuarterExpand (auto-generated)


/**
	NTV2DeviceCanDoRateConvert
	Returns true if the device having the given ID can do frame rate conversion.
**/
bool NTV2DeviceCanDoRateConvert (const NTV2DeviceID inDeviceID)
{
	(void) inDeviceID;

	return false;

}	//  NTV2DeviceCanDoRateConvert (auto-generated)


/**
	NTV2DeviceCanDoRGBPlusAlphaOut
	Returns true if the device with the given ID has CSCs capable of splitting the key (alpha) and YCbCr (fill) from RGB frame buffers that include alpha. Has nothing to do with RGB wire formats.
**/
bool NTV2DeviceCanDoRGBPlusAlphaOut (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoRGBPlusAlphaOut (auto-generated)


/**
	NTV2DeviceCanDoRP188
	Returns true if the device having the given ID can insert and/or extract RP-188/VITC.
**/
bool NTV2DeviceCanDoRP188 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoRP188 (auto-generated)


/**
	NTV2DeviceCanDoSDVideo
	Returns true if the device having the given ID can handle SD (Standard Definition) video.
**/
bool NTV2DeviceCanDoSDVideo (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoSDVideo (auto-generated)


/**
	NTV2DeviceCanDoSDIErrorChecks
	Returns true if the device having the given ID can perform SDI error checking.
**/
bool NTV2DeviceCanDoSDIErrorChecks (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_CORVID44:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoSDIErrorChecks (auto-generated)


/**
	NTV2DeviceCanDoStackedAudio
	Returns true if the device having the given ID uses a "stacked" arrangement of its audio buffers.
**/
bool NTV2DeviceCanDoStackedAudio (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoStackedAudio (auto-generated)


/**
	NTV2DeviceCanDoStereoIn
	Returns true if the device having the given ID supports 3D video input over dual-stream SDI.
**/
bool NTV2DeviceCanDoStereoIn (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoStereoIn (auto-generated)


/**
	NTV2DeviceCanDoStereoOut
	Returns true if the device having the given ID supports 3D video output over dual-stream SDI.
**/
bool NTV2DeviceCanDoStereoOut (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoStereoOut (auto-generated)


/**
	NTV2DeviceCanDoThunderbolt
	Returns true if the device having the given ID connects to the host using a Thunderbolt cable.
**/
bool NTV2DeviceCanDoThunderbolt (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoThunderbolt (auto-generated)


/**
	NTV2DeviceCanDoVideoProcessing
**/
bool NTV2DeviceCanDoVideoProcessing (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoVideoProcessing (auto-generated)


/**
	NTV2DeviceCanMeasureTemperature
	Returns true if the device having the given ID can measure its temperature.
**/
bool NTV2DeviceCanMeasureTemperature (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanMeasureTemperature (auto-generated)


/**
	NTV2DeviceCanReportFrameSize
**/
bool NTV2DeviceCanReportFrameSize (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanReportFrameSize (auto-generated)


/**
	NTV2DeviceHasBiDirectionalSDI
	Returns true if the SDI connectors on the device having the given ID are bi-directional.
**/
bool NTV2DeviceHasBiDirectionalSDI (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasBiDirectionalSDI (auto-generated)


/**
	NTV2DeviceHasColorSpaceConverterOnChannel2
**/
bool NTV2DeviceHasColorSpaceConverterOnChannel2 (const NTV2DeviceID inDeviceID)
{
	(void) inDeviceID;

	return false;

}	//  NTV2DeviceHasColorSpaceConverterOnChannel2 (auto-generated)


/**
	NTV2DeviceHasNWL
	Returns true if the device having the given ID has NorthWest Logic DMA hardware.
**/
bool NTV2DeviceHasNWL (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasNWL (auto-generated)


/**
	NTV2DeviceHasPCIeGen2
	Returns true if the device having the given ID supports 2nd-generation PCIe.
**/
bool NTV2DeviceHasPCIeGen2 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasPCIeGen2 (auto-generated)


/**
	NTV2DeviceHasRetailSupport
	Returns true if the device can be configured and controlled by the retail services and AJA Control Panel.
**/
bool NTV2DeviceHasRetailSupport (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasRetailSupport (auto-generated)


/**
	NTV2DeviceHasSDIRelays
	Returns true if the device having the given ID has bypass relays on its SDI connectors.
**/
bool NTV2DeviceHasSDIRelays (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID24:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasSDIRelays (auto-generated)


/**
	NTV2DeviceHasSPIFlash
**/
bool NTV2DeviceHasSPIFlash (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasSPIFlash (auto-generated)


/**
	NTV2DeviceHasSPIFlashSerial
**/
bool NTV2DeviceHasSPIFlashSerial (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasSPIFlashSerial (auto-generated)


/**
	NTV2DeviceHasSPIv2
	Returns true if the device having the given ID uses version 2 SPI hardware.
**/
bool NTV2DeviceHasSPIv2 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasSPIv2 (auto-generated)


/**
	NTV2DeviceHasSPIv3
	Returns true if the device having the given ID uses version 3 SPI hardware.
**/
bool NTV2DeviceHasSPIv3 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasSPIv3 (auto-generated)


/**
	NTV2DeviceHasSPIv4
	Returns true if the device having the given ID uses version 4 SPI hardware.
**/
bool NTV2DeviceHasSPIv4 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasSPIv4 (auto-generated)


/**
	NTV2DeviceIs64Bit
**/
bool NTV2DeviceIs64Bit (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceIs64Bit (auto-generated)


/**
	NTV2DeviceIsDirectAddressable
**/
bool NTV2DeviceIsDirectAddressable (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceIsDirectAddressable (auto-generated)


/**
	NTV2DeviceIsExternalToHost
	Returns true if the device having the given ID connects to the host with a cable.
**/
bool NTV2DeviceIsExternalToHost (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceIsExternalToHost (auto-generated)


/**
	NTV2DeviceIsSupported
	Returns true if the device having the given ID is supported by this SDK.
**/
bool NTV2DeviceIsSupported (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceIsSupported (auto-generated)


/**
	NTV2DeviceNeedsRoutingSetup
	Returns true if the routing for the device having the given ID can be queried and/or changed.
**/
bool NTV2DeviceNeedsRoutingSetup (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVID1:
		case DEVICE_ID_CORVID3G:
		case DEVICE_ID_KONALHI:
		case DEVICE_ID_KONALHIDVI:
		case DEVICE_ID_KONALHEPLUS:
		case DEVICE_ID_IOEXPRESS:
		case DEVICE_ID_CORVID22:
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_KONA3GQUAD:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_TTAP:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceNeedsRoutingSetup (auto-generated)


/**
	NTV2DeviceSoftwareCanChangeFrameBufferSize
**/
bool NTV2DeviceSoftwareCanChangeFrameBufferSize (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONA3G:
		case DEVICE_ID_CORVID24:
		case DEVICE_ID_IOXT:
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_CORVIDHBR:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceSoftwareCanChangeFrameBufferSize (auto-generated)


/**
	NTV2DeviceCanThermostat
	Returns true if the fan on the device having the given ID can be thermostatically controlled.
**/
bool NTV2DeviceCanThermostat (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanThermostat (auto-generated)


/**
	NTV2DeviceHasHEVCM31
	Returns true if the device having the given ID has an HEVC M31 encoder.
**/
bool NTV2DeviceHasHEVCM31 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_CORVIDHEVC:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasHEVCM31 (auto-generated)


/**
	NTV2DeviceHasHEVCM30
	Returns true if the device having the given ID has an HEVC M30 encoder/decoder.
**/
bool NTV2DeviceHasHEVCM30 (const NTV2DeviceID inDeviceID)
{
	(void) inDeviceID;

	return false;

}	//  NTV2DeviceHasHEVCM30 (auto-generated)


/**
	NTV2DeviceCanDoVITC2
	Returns true if the device having the given ID can insert and/or extract RP-188/VITC2.
**/
bool NTV2DeviceCanDoVITC2 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_IO4KUFC:
		case DEVICE_ID_CORVID88:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONA4UFC:
		case DEVICE_ID_CORVID44:
		case DEVICE_ID_CORVIDHEVC:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoVITC2 (auto-generated)


/**
	NTV2DeviceCanDoHDMIHDROut
	Returns true if the device having the given ID supports HDMI HDR output.
**/
bool NTV2DeviceCanDoHDMIHDROut (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_KONAIP_2022:
		case DEVICE_ID_KONAIP_4CH_2SFP:
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoHDMIHDROut (auto-generated)


/**
	NTV2DeviceCanDoJ2K
	Returns true if the device supports the JPEG 2000 codec
**/
bool NTV2DeviceCanDoJ2K (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoJ2K (auto-generated)


/**
	NTV2DeviceCanDo2110
	Returns true if the device supports SMPTE 2110
**/
bool NTV2DeviceCanDo2110 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_KONAIP_1RX_1TX_2110:
		case DEVICE_ID_IOIP_2110:
		case DEVICE_ID_KONAIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDo2110 (auto-generated)


/**
	NTV2DeviceHasXilinxDMA
	Returns true if the device has Xilinx DMA engine
**/
bool NTV2DeviceHasXilinxDMA (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasXilinxDMA (auto-generated)


/**
	NTV2DeviceCanDo12GSDI
	Returns true if the device supports 12G SDI
**/
bool NTV2DeviceCanDo12GSDI (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4KPLUS:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDo12GSDI (auto-generated)


/**
	NTV2DeviceHasSPIv5
	Returns true if the device having the given ID uses version 5 SPI hardware.
**/
bool NTV2DeviceHasSPIv5 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasSPIv5 (auto-generated)


/**
	NTV2DeviceCanDoAudioMixer
	Returns true if the device supports an audio mixer (firmware dependent).
**/
bool NTV2DeviceCanDoAudioMixer (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4K:
		case DEVICE_ID_KONA4:
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceCanDoAudioMixer (auto-generated)


/**
	NTV2DeviceHasGenlockv2
**/
bool NTV2DeviceHasGenlockv2 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_IO4KPLUS:
		case DEVICE_ID_IOIP_2022:
		case DEVICE_ID_IOIP_2110:
			return true;
		default:
			break;
	}	//	switch on inDeviceID

	return false;

}	//  NTV2DeviceHasGenlockv2 (auto-generated)


/**
	NTV2DeviceGetActiveMemorySize
	Returns the size, in bytes, of the device's active RAM available for video and audio.
**/
ULWord NTV2DeviceGetActiveMemorySize (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0x00000000;
		case DEVICE_ID_CORVID1:		return 0x00000000;
		case DEVICE_ID_CORVID3G:	return 0x00000000;
		case DEVICE_ID_KONALHI:		return 0x00000000;
		case DEVICE_ID_KONALHIDVI:	return 0x00000000;
		case DEVICE_ID_KONALHEPLUS:	return 0x00000000;
		case DEVICE_ID_IOEXPRESS:	return 0x00000000;
		case DEVICE_ID_CORVID22:	return 0x00000000;
		case DEVICE_ID_KONA3G:		return 0x00000000;
		case DEVICE_ID_KONA3GQUAD:	return 0x20000000;
		case DEVICE_ID_CORVID24:	return 0x20000000;
		case DEVICE_ID_IOXT:		return 0xC000000;
		case DEVICE_ID_TTAP:		return 0x00000000;
		case DEVICE_ID_IO4K:		return 0x37800000;
		case DEVICE_ID_IO4KUFC:		return 0x37800000;
		case DEVICE_ID_CORVID88:	return 0x40000000;
		case DEVICE_ID_KONA4:		return 0x37800000;
		case DEVICE_ID_KONA4UFC:	return 0x37800000;
		case DEVICE_ID_CORVID44:	return 0x40000000;
		case DEVICE_ID_CORVIDHEVC:	return 0x40000000;
		case DEVICE_ID_CORVIDHBR:	return 0x20000000;
		case DEVICE_ID_KONAIP_2022:	return 0x37800000;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0x37800000;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0x37800000;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0x37800000;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0x37800000;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0x37800000;
		case DEVICE_ID_IO4KPLUS:	return 0x80000000;
		case DEVICE_ID_IOIP_2022:	return 0x80000000;
		case DEVICE_ID_IOIP_2110:	return 0x80000000;
		case DEVICE_ID_KONAIP_2110:	return 0x37800000;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0x00000000;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetActiveMemorySize (auto-generated)


/**
	NTV2DeviceGetDACVersion
	Returns the version number of the DAC on the device having the given ID.
**/
UWord NTV2DeviceGetDACVersion (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 2;
		case DEVICE_ID_KONALHIDVI:	return 2;
		case DEVICE_ID_KONALHEPLUS:	return 2;
		case DEVICE_ID_IOEXPRESS:	return 2;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 2;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 2;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 0;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 2;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetDACVersion (auto-generated)


/**
	NTV2DeviceGetDownConverterDelay
	Returns the down-converter delay on the device having the given ID.
**/
UWord NTV2DeviceGetDownConverterDelay (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetDownConverterDelay (auto-generated)


/**
	NTV2DeviceGetHDMIVersion
	Returns the version number of the HDMI input(s) and/or output(s) on the device having the given ID.
**/
ULWord NTV2DeviceGetHDMIVersion (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 1;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 1;
		case DEVICE_ID_IO4K:		return 2;
		case DEVICE_ID_IO4KUFC:		return 3;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 2;
		case DEVICE_ID_KONA4UFC:	return 3;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 2;
		case DEVICE_ID_KONAIP_2022:	return 3;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 3;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 3;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 3;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 3;
		case DEVICE_ID_IO4KPLUS:	return 4;
		case DEVICE_ID_IOIP_2022:	return 4;
		case DEVICE_ID_IOIP_2110:	return 4;
		case DEVICE_ID_KONAIP_2110:	return 3;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetHDMIVersion (auto-generated)


/**
	NTV2DeviceGetLUTVersion
	Returns the version number of the LUT(s) on the device having the given ID.
**/
ULWord NTV2DeviceGetLUTVersion (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 1;
		case DEVICE_ID_CORVID3G:	return 1;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 1;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 1;
		case DEVICE_ID_CORVID24:	return 1;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 1;
		case DEVICE_ID_IO4K:		return 1;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 2;
		case DEVICE_ID_KONA4:		return 1;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 2;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 1;
		case DEVICE_ID_KONAIP_2022:	return 1;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 1;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 1;
		case DEVICE_ID_IO4KPLUS:	return 2;
		case DEVICE_ID_IOIP_2022:	return 2;
		case DEVICE_ID_IOIP_2110:	return 2;
		case DEVICE_ID_KONAIP_2110:	return 1;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetLUTVersion (auto-generated)


/**
	NTV2DeviceGetMaxAudioChannels
	Returns the maximum number of audio channels that a single audio system can support on the device having the given ID.
**/
UWord NTV2DeviceGetMaxAudioChannels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 16;
		case DEVICE_ID_CORVID3G:	return 16;
		case DEVICE_ID_KONALHI:		return 8;
		case DEVICE_ID_KONALHIDVI:	return 8;
		case DEVICE_ID_KONALHEPLUS:	return 8;
		case DEVICE_ID_IOEXPRESS:	return 8;
		case DEVICE_ID_CORVID22:	return 16;
		case DEVICE_ID_KONA3G:		return 16;
		case DEVICE_ID_KONA3GQUAD:	return 16;
		case DEVICE_ID_CORVID24:	return 16;
		case DEVICE_ID_IOXT:		return 16;
		case DEVICE_ID_TTAP:		return 8;
		case DEVICE_ID_IO4K:		return 16;
		case DEVICE_ID_IO4KUFC:		return 16;
		case DEVICE_ID_CORVID88:	return 16;
		case DEVICE_ID_KONA4:		return 16;
		case DEVICE_ID_KONA4UFC:	return 16;
		case DEVICE_ID_CORVID44:	return 16;
		case DEVICE_ID_CORVIDHEVC:	return 16;
		case DEVICE_ID_CORVIDHBR:	return 16;
		case DEVICE_ID_KONAIP_2022:	return 16;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 16;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 16;
		case DEVICE_ID_IO4KPLUS:	return 16;
		case DEVICE_ID_IOIP_2022:	return 16;
		case DEVICE_ID_IOIP_2110:	return 16;
		case DEVICE_ID_KONAIP_2110:	return 16;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetMaxAudioChannels (auto-generated)


/**
	NTV2DeviceGetMaxRegisterNumber
	Returns the highest register number for the device having the given ID.
**/
ULWord NTV2DeviceGetMaxRegisterNumber (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return kRegCS2Coefficients9_10;
		case DEVICE_ID_CORVID3G:	return kRegXptSelectGroup10;
		case DEVICE_ID_KONALHI:		return kRegSDIOut1VPIDB;
		case DEVICE_ID_KONALHIDVI:	return kRegSDIOut1VPIDB;
		case DEVICE_ID_KONALHEPLUS:	return kRegSDIIn2VPIDB;
		case DEVICE_ID_IOEXPRESS:	return kRegSDIOut1VPIDB;
		case DEVICE_ID_CORVID22:	return kRegLTC2AnalogBits32_63;
		case DEVICE_ID_KONA3G:		return kRegLTC2AnalogBits32_63;
		case DEVICE_ID_KONA3GQUAD:	return kRegLTC4EmbeddedBits32_63;
		case DEVICE_ID_CORVID24:	return kRegSDIWatchdogKick2;
		case DEVICE_ID_IOXT:		return kRegLTC2AnalogBits32_63;
		case DEVICE_ID_TTAP:		return kRegSDIOut1VPIDB;
		case DEVICE_ID_IO4K:		return kRegReserved511;
		case DEVICE_ID_IO4KUFC:		return kRegHDMIV2i2c2Data;
		case DEVICE_ID_CORVID88:	return kRegReserved511;
		case DEVICE_ID_KONA4:		return kRegReserved511;
		case DEVICE_ID_KONA4UFC:	return kRegRasterizerControl;
		case DEVICE_ID_CORVID44:	return kRegReserved511;
		case DEVICE_ID_CORVIDHEVC:	return kRegReserved511;
		case DEVICE_ID_CORVIDHBR:	return kRegReserved511;
		case DEVICE_ID_KONAIP_2022:	return kRegReserved511;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return kRegReserved511;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return kRegReserved511;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return kRegReserved511;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return kRegReserved511;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return kRegReserved511;
		case DEVICE_ID_IO4KPLUS:	return kRegReserved511;
		case DEVICE_ID_IOIP_2022:	return kRegReserved511;
		case DEVICE_ID_IOIP_2110:	return kRegReserved511;
		case DEVICE_ID_KONAIP_2110:	return kRegReserved511;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetMaxRegisterNumber (auto-generated)


/**
	NTV2DeviceGetMaxTransferCount
	Returns the maximum number of 32-bit words that the DMA engine can move at a time on the device having the given ID.
**/
ULWord NTV2DeviceGetMaxTransferCount (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return BIT(21) - 1;
		case DEVICE_ID_CORVID3G:	return BIT(21) - 1;
		case DEVICE_ID_KONALHI:		return BIT(21) - 1;
		case DEVICE_ID_KONALHIDVI:	return BIT(21) - 1;
		case DEVICE_ID_KONALHEPLUS:	return BIT(21) - 1;
		case DEVICE_ID_IOEXPRESS:	return BIT(21) - 1;
		case DEVICE_ID_CORVID22:	return BIT(21) - 1;
		case DEVICE_ID_KONA3G:		return BIT(21) - 1;
		case DEVICE_ID_KONA3GQUAD:	return BIT(21) - 1;
		case DEVICE_ID_CORVID24:	return BIT(21) - 1;
		case DEVICE_ID_IOXT:		return BIT(21) - 1;
		case DEVICE_ID_TTAP:		return BIT(21) - 1;
		case DEVICE_ID_IO4K:		return BIT(21) - 1;
		case DEVICE_ID_IO4KUFC:		return BIT(21) - 1;
		case DEVICE_ID_CORVID88:	return BIT(21) - 1;
		case DEVICE_ID_KONA4:		return BIT(21) - 1;
		case DEVICE_ID_KONA4UFC:	return BIT(21) - 1;
		case DEVICE_ID_CORVID44:	return BIT(21) - 1;
		case DEVICE_ID_CORVIDHEVC:	return BIT(21) - 1;
		case DEVICE_ID_CORVIDHBR:	return BIT(21) - 1;
		case DEVICE_ID_KONAIP_2022:	return BIT(21) - 1;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return BIT(21) - 1;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return BIT(21) - 1;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return BIT(21) - 1;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return BIT(21) - 1;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return BIT(21) - 1;
		case DEVICE_ID_IO4KPLUS:	return BIT(21) - 1;
		case DEVICE_ID_IOIP_2022:	return BIT(21) - 1;
		case DEVICE_ID_IOIP_2110:	return BIT(21) - 1;
		case DEVICE_ID_KONAIP_2110:	return BIT(21) - 1;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetMaxTransferCount (auto-generated)


/**
	NTV2DeviceGetNumDMAEngines
	Returns the number of DMA engines on the device having the given ID.
**/
ULWord NTV2DeviceGetNumDMAEngines (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 2;
		case DEVICE_ID_CORVID3G:	return 2;
		case DEVICE_ID_KONALHI:		return 3;
		case DEVICE_ID_KONALHIDVI:	return 3;
		case DEVICE_ID_KONALHEPLUS:	return 2;
		case DEVICE_ID_IOEXPRESS:	return 2;
		case DEVICE_ID_CORVID22:	return 3;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 2;
		case DEVICE_ID_CORVID24:	return 2;
		case DEVICE_ID_IOXT:		return 2;
		case DEVICE_ID_TTAP:		return 2;
		case DEVICE_ID_IO4K:		return 2;
		case DEVICE_ID_IO4KUFC:		return 2;
		case DEVICE_ID_CORVID88:	return 2;
		case DEVICE_ID_KONA4:		return 2;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 2;
		case DEVICE_ID_CORVIDHEVC:	return 2;
		case DEVICE_ID_CORVIDHBR:	return 2;
		case DEVICE_ID_KONAIP_2022:	return 2;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 2;
		case DEVICE_ID_IO4KPLUS:	return 2;
		case DEVICE_ID_IOIP_2022:	return 2;
		case DEVICE_ID_IOIP_2110:	return 2;
		case DEVICE_ID_KONAIP_2110:	return 2;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumDMAEngines (auto-generated)


/**
	NTV2DeviceGetNumVideoChannels
	Returns the number of video channels supported on the device having the given ID.
**/
ULWord NTV2DeviceGetNumVideoChannels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 2;
		case DEVICE_ID_CORVID3G:	return 2;
		case DEVICE_ID_KONALHI:		return 2;
		case DEVICE_ID_KONALHIDVI:	return 2;
		case DEVICE_ID_KONALHEPLUS:	return 2;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 2;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 4;
		case DEVICE_ID_CORVID24:	return 4;
		case DEVICE_ID_IOXT:		return 2;
		case DEVICE_ID_TTAP:		return 1;
		case DEVICE_ID_IO4K:		return 4;
		case DEVICE_ID_IO4KUFC:		return 2;
		case DEVICE_ID_CORVID88:	return 8;
		case DEVICE_ID_KONA4:		return 4;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 4;
		case DEVICE_ID_CORVIDHEVC:	return 8;
		case DEVICE_ID_CORVIDHBR:	return 4;
		case DEVICE_ID_KONAIP_2022:	return 4;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 4;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 4;
		case DEVICE_ID_IO4KPLUS:	return 8;
		case DEVICE_ID_IOIP_2022:	return 8;
		case DEVICE_ID_IOIP_2110:	return 8;
		case DEVICE_ID_KONAIP_2110:	return 4;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumVideoChannels (auto-generated)


/**
	NTV2DeviceGetPingLED
	Returns the highest bit number of the LED bits in the Global Control Register on the device having the given ID.
**/
ULWord NTV2DeviceGetPingLED (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return BIT(19);
		case DEVICE_ID_CORVID3G:	return BIT(19);
		case DEVICE_ID_KONALHI:		return BIT(16);
		case DEVICE_ID_KONALHIDVI:	return BIT(16);
		case DEVICE_ID_KONALHEPLUS:	return BIT(16);
		case DEVICE_ID_IOEXPRESS:	return BIT(16);
		case DEVICE_ID_CORVID22:	return BIT(19);
		case DEVICE_ID_KONA3G:		return BIT(16);
		case DEVICE_ID_KONA3GQUAD:	return BIT(16);
		case DEVICE_ID_CORVID24:	return BIT(16);
		case DEVICE_ID_IOXT:		return BIT(16);
		case DEVICE_ID_TTAP:		return BIT(16);
		case DEVICE_ID_IO4K:		return BIT(16);
		case DEVICE_ID_IO4KUFC:		return BIT(16);
		case DEVICE_ID_CORVID88:	return BIT(16);
		case DEVICE_ID_KONA4:		return BIT(16);
		case DEVICE_ID_KONA4UFC:	return BIT(16);
		case DEVICE_ID_CORVID44:	return BIT(16);
		case DEVICE_ID_CORVIDHEVC:	return BIT(16);
		case DEVICE_ID_CORVIDHBR:	return BIT(16);
		case DEVICE_ID_KONAIP_2022:	return BIT(16);
		case DEVICE_ID_KONAIP_4CH_2SFP:	return BIT(16);
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return BIT(16);
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return BIT(16);
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return BIT(16);
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return BIT(16);
		case DEVICE_ID_IO4KPLUS:	return BIT(16);
		case DEVICE_ID_IOIP_2022:	return BIT(16);
		case DEVICE_ID_IOIP_2110:	return BIT(16);
		case DEVICE_ID_KONAIP_2110:	return BIT(16);
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetPingLED (auto-generated)


/**
	NTV2DeviceGetUFCVersion
	Returns the version number of the UFC on the device having the given ID.
**/
ULWord NTV2DeviceGetUFCVersion (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 1;
		case DEVICE_ID_CORVID3G:	return 1;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 1;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 1;
		case DEVICE_ID_CORVID24:	return 1;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 1;
		case DEVICE_ID_IO4K:		return 1;
		case DEVICE_ID_IO4KUFC:		return 2;
		case DEVICE_ID_CORVID88:	return 1;
		case DEVICE_ID_KONA4:		return 1;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 1;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 1;
		case DEVICE_ID_IOIP_2022:	return 1;
		case DEVICE_ID_IOIP_2110:	return 1;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetUFCVersion (auto-generated)


/**
	NTV2DeviceGetNum4kQuarterSizeConverters
	Returns the number of quarter-size 4K/UHD down-converters on the device having the given ID.
**/
UWord NTV2DeviceGetNum4kQuarterSizeConverters (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 0;
		case DEVICE_ID_KONALHIDVI:	return 0;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 0;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 0;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 1;
		case DEVICE_ID_IO4KUFC:		return 0;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 1;
		case DEVICE_ID_KONA4UFC:	return 0;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 1;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 1;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 1;
		case DEVICE_ID_IOIP_2022:	return 1;
		case DEVICE_ID_IOIP_2110:	return 1;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNum4kQuarterSizeConverters (auto-generated)


/**
	NTV2DeviceGetNumAESAudioInputChannels
	Returns the number of AES/EBU audio input channels on the device having the given ID.
**/
UWord NTV2DeviceGetNumAESAudioInputChannels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 2;
		case DEVICE_ID_KONALHIDVI:	return 2;
		case DEVICE_ID_KONALHEPLUS:	return 2;
		case DEVICE_ID_IOEXPRESS:	return 2;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 16;
		case DEVICE_ID_KONA3GQUAD:	return 16;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 0;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 0;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 16;
		case DEVICE_ID_KONA4UFC:	return 16;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 2;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumAESAudioInputChannels (auto-generated)


/**
	NTV2DeviceGetNumAESAudioOutputChannels
	Returns the number of AES/EBU audio output channels on the device having the given ID.
**/
UWord NTV2DeviceGetNumAESAudioOutputChannels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 2;
		case DEVICE_ID_KONALHIDVI:	return 2;
		case DEVICE_ID_KONALHEPLUS:	return 2;
		case DEVICE_ID_IOEXPRESS:	return 2;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 16;
		case DEVICE_ID_KONA3GQUAD:	return 16;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 0;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 16;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 16;
		case DEVICE_ID_KONA4UFC:	return 16;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumAESAudioOutputChannels (auto-generated)


/**
	NTV2DeviceGetNumAnalogAudioInputChannels
	Returns the number of analog audio input channels on the device having the given ID.
**/
UWord NTV2DeviceGetNumAnalogAudioInputChannels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 2;
		case DEVICE_ID_KONALHIDVI:	return 2;
		case DEVICE_ID_KONALHEPLUS:	return 2;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 0;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 0;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 0;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 0;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 8;
		case DEVICE_ID_IOIP_2022:	return 8;
		case DEVICE_ID_IOIP_2110:	return 8;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumAnalogAudioInputChannels (auto-generated)


/**
	NTV2DeviceGetNumAnalogAudioOutputChannels
	Returns the number of analog audio output channels on the device having the given ID.
**/
UWord NTV2DeviceGetNumAnalogAudioOutputChannels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 2;
		case DEVICE_ID_KONALHIDVI:	return 2;
		case DEVICE_ID_KONALHEPLUS:	return 2;
		case DEVICE_ID_IOEXPRESS:	return 2;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 0;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 8;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 8;
		case DEVICE_ID_IO4KUFC:		return 8;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 0;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 8;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 8;
		case DEVICE_ID_IOIP_2022:	return 8;
		case DEVICE_ID_IOIP_2110:	return 8;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumAnalogAudioOutputChannels (auto-generated)


/**
	NTV2DeviceGetNumAnalogVideoInputs
	Returns the number of analog video inputs on the device having the given ID.
**/
UWord NTV2DeviceGetNumAnalogVideoInputs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 0;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 0;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 0;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 0;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumAnalogVideoInputs (auto-generated)


/**
	NTV2DeviceGetNumAnalogVideoOutputs
	Returns the number of analog video outputs on the device having the given ID.
**/
UWord NTV2DeviceGetNumAnalogVideoOutputs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 1;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 0;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 1;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumAnalogVideoOutputs (auto-generated)


/**
	NTV2DeviceGetNumAudioSystems
	Returns the number of independent audio systems on the device having the given ID.
**/
UWord NTV2DeviceGetNumAudioSystems (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 1;
		case DEVICE_ID_CORVID3G:	return 1;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 2;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 4;
		case DEVICE_ID_CORVID24:	return 4;
		case DEVICE_ID_IOXT:		return 2;
		case DEVICE_ID_TTAP:		return 1;
		case DEVICE_ID_IO4K:		return 4;
		case DEVICE_ID_IO4KUFC:		return 2;
		case DEVICE_ID_CORVID88:	return 8;
		case DEVICE_ID_KONA4:		return 4;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 4;
		case DEVICE_ID_CORVIDHEVC:	return 4;
		case DEVICE_ID_CORVIDHBR:	return 1;
		case DEVICE_ID_KONAIP_2022:	return 4;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 4;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 4;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 4;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 4;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 4;
		case DEVICE_ID_IO4KPLUS:	return 4;
		case DEVICE_ID_IOIP_2022:	return 4;
		case DEVICE_ID_IOIP_2110:	return 4;
		case DEVICE_ID_KONAIP_2110:	return 4;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumAudioSystems (auto-generated)


/**
	NTV2DeviceGetNumCrossConverters
	Returns the number of cross-converters on the device having the given ID.
**/
UWord NTV2DeviceGetNumCrossConverters (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumCrossConverters (auto-generated)


/**
	NTV2DeviceGetNumCSCs
	Returns the number of colorspace converter widgets on the device having the given ID.
**/
UWord NTV2DeviceGetNumCSCs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 2;
		case DEVICE_ID_KONALHI:		return 2;
		case DEVICE_ID_KONALHIDVI:	return 2;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 2;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 4;
		case DEVICE_ID_CORVID24:	return 4;
		case DEVICE_ID_IOXT:		return 2;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 5;
		case DEVICE_ID_IO4KUFC:		return 3;
		case DEVICE_ID_CORVID88:	return 8;
		case DEVICE_ID_KONA4:		return 5;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 4;
		case DEVICE_ID_CORVIDHEVC:	return 4;
		case DEVICE_ID_CORVIDHBR:	return 4;
		case DEVICE_ID_KONAIP_2022:	return 5;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 5;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 5;
		case DEVICE_ID_IO4KPLUS:	return 5;
		case DEVICE_ID_IOIP_2022:	return 5;
		case DEVICE_ID_IOIP_2110:	return 5;
		case DEVICE_ID_KONAIP_2110:	return 5;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumCSCs (auto-generated)


/**
	NTV2DeviceGetNumDownConverters
	Returns the number of down-converters on the device having the given ID.
**/
UWord NTV2DeviceGetNumDownConverters (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumDownConverters (auto-generated)


/**
	NTV2DeviceGetNumEmbeddedAudioInputChannels
	Returns the number of SDI-embedded input audio channels supported by the device having the given ID.
**/
UWord NTV2DeviceGetNumEmbeddedAudioInputChannels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 16;
		case DEVICE_ID_CORVID3G:	return 16;
		case DEVICE_ID_KONALHI:		return 8;
		case DEVICE_ID_KONALHIDVI:	return 8;
		case DEVICE_ID_KONALHEPLUS:	return 8;
		case DEVICE_ID_IOEXPRESS:	return 8;
		case DEVICE_ID_CORVID22:	return 16;
		case DEVICE_ID_KONA3G:		return 16;
		case DEVICE_ID_KONA3GQUAD:	return 16;
		case DEVICE_ID_CORVID24:	return 16;
		case DEVICE_ID_IOXT:		return 16;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 16;
		case DEVICE_ID_IO4KUFC:		return 16;
		case DEVICE_ID_CORVID88:	return 16;
		case DEVICE_ID_KONA4:		return 16;
		case DEVICE_ID_KONA4UFC:	return 16;
		case DEVICE_ID_CORVID44:	return 16;
		case DEVICE_ID_CORVIDHEVC:	return 16;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 16;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 16;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 16;
		case DEVICE_ID_IO4KPLUS:	return 16;
		case DEVICE_ID_IOIP_2022:	return 16;
		case DEVICE_ID_IOIP_2110:	return 16;
		case DEVICE_ID_KONAIP_2110:	return 16;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumEmbeddedAudioInputChannels (auto-generated)


/**
	NTV2DeviceGetNumEmbeddedAudioOutputChannels
	Returns the number of SDI-embedded output audio channels supported by the device having the given ID.
**/
UWord NTV2DeviceGetNumEmbeddedAudioOutputChannels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 16;
		case DEVICE_ID_CORVID3G:	return 16;
		case DEVICE_ID_KONALHI:		return 8;
		case DEVICE_ID_KONALHIDVI:	return 8;
		case DEVICE_ID_KONALHEPLUS:	return 8;
		case DEVICE_ID_IOEXPRESS:	return 8;
		case DEVICE_ID_CORVID22:	return 16;
		case DEVICE_ID_KONA3G:		return 16;
		case DEVICE_ID_KONA3GQUAD:	return 16;
		case DEVICE_ID_CORVID24:	return 16;
		case DEVICE_ID_IOXT:		return 16;
		case DEVICE_ID_TTAP:		return 8;
		case DEVICE_ID_IO4K:		return 16;
		case DEVICE_ID_IO4KUFC:		return 16;
		case DEVICE_ID_CORVID88:	return 16;
		case DEVICE_ID_KONA4:		return 16;
		case DEVICE_ID_KONA4UFC:	return 16;
		case DEVICE_ID_CORVID44:	return 16;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 16;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 16;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 16;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 16;
		case DEVICE_ID_IO4KPLUS:	return 16;
		case DEVICE_ID_IOIP_2022:	return 16;
		case DEVICE_ID_IOIP_2110:	return 16;
		case DEVICE_ID_KONAIP_2110:	return 16;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumEmbeddedAudioOutputChannels (auto-generated)


/**
	NTV2DeviceGetNumFrameStores
	Returns the number of frame stores on the device having the given ID.
**/
UWord NTV2DeviceGetNumFrameStores (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 2;
		case DEVICE_ID_CORVID3G:	return 2;
		case DEVICE_ID_KONALHI:		return 2;
		case DEVICE_ID_KONALHIDVI:	return 2;
		case DEVICE_ID_KONALHEPLUS:	return 2;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 2;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 4;
		case DEVICE_ID_CORVID24:	return 4;
		case DEVICE_ID_IOXT:		return 2;
		case DEVICE_ID_TTAP:		return 1;
		case DEVICE_ID_IO4K:		return 4;
		case DEVICE_ID_IO4KUFC:		return 2;
		case DEVICE_ID_CORVID88:	return 8;
		case DEVICE_ID_KONA4:		return 4;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 4;
		case DEVICE_ID_CORVIDHEVC:	return 8;
		case DEVICE_ID_CORVIDHBR:	return 4;
		case DEVICE_ID_KONAIP_2022:	return 4;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 4;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 4;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 4;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 4;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 4;
		case DEVICE_ID_IO4KPLUS:	return 4;
		case DEVICE_ID_IOIP_2022:	return 4;
		case DEVICE_ID_IOIP_2110:	return 4;
		case DEVICE_ID_KONAIP_2110:	return 4;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumFrameStores (auto-generated)


/**
	NTV2DeviceGetNumFrameSyncs
	Returns the number of frame sync widgets on the device having the given ID.
**/
UWord NTV2DeviceGetNumFrameSyncs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 0;
		case DEVICE_ID_KONALHIDVI:	return 0;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 0;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 0;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 0;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 0;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumFrameSyncs (auto-generated)


/**
	NTV2DeviceGetNumHDMIAudioInputChannels
	Returns the number of HDMI audio input channels on the device having the given ID.
**/
UWord NTV2DeviceGetNumHDMIAudioInputChannels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 8;
		case DEVICE_ID_KONALHIDVI:	return 8;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 8;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 0;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 8;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 8;
		case DEVICE_ID_IO4KUFC:		return 8;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 0;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 8;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 8;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumHDMIAudioInputChannels (auto-generated)


/**
	NTV2DeviceGetNumHDMIAudioOutputChannels
	Returns the number of HDMI audio output channels on the device having the given ID.
**/
UWord NTV2DeviceGetNumHDMIAudioOutputChannels (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 8;
		case DEVICE_ID_KONALHIDVI:	return 8;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 8;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 8;
		case DEVICE_ID_KONA3GQUAD:	return 8;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 8;
		case DEVICE_ID_TTAP:		return 8;
		case DEVICE_ID_IO4K:		return 8;
		case DEVICE_ID_IO4KUFC:		return 8;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 8;
		case DEVICE_ID_KONA4UFC:	return 8;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 8;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 8;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 8;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 8;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 8;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 8;
		case DEVICE_ID_IO4KPLUS:	return 8;
		case DEVICE_ID_IOIP_2022:	return 8;
		case DEVICE_ID_IOIP_2110:	return 8;
		case DEVICE_ID_KONAIP_2110:	return 8;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumHDMIAudioOutputChannels (auto-generated)


/**
	NTV2DeviceGetNumHDMIVideoInputs
	Returns the number of HDMI video inputs on the device having the given ID.
**/
UWord NTV2DeviceGetNumHDMIVideoInputs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 0;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 1;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 0;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 1;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 1;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumHDMIVideoInputs (auto-generated)


/**
	NTV2DeviceGetNumHDMIVideoOutputs
	Returns the number of HDMI video outputs on the device having the given ID.
**/
UWord NTV2DeviceGetNumHDMIVideoOutputs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 1;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 1;
		case DEVICE_ID_IO4K:		return 1;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 1;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 1;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 1;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 1;
		case DEVICE_ID_IO4KPLUS:	return 1;
		case DEVICE_ID_IOIP_2022:	return 1;
		case DEVICE_ID_IOIP_2110:	return 1;
		case DEVICE_ID_KONAIP_2110:	return 1;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumHDMIVideoOutputs (auto-generated)


/**
	NTV2DeviceGetNumInputConverters
	Returns the number of input converter widgets on the device having the given ID.
**/
UWord NTV2DeviceGetNumInputConverters (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumInputConverters (auto-generated)


/**
	NTV2DeviceGetNumLUTs
	Returns the number of LUT widgets on the device having the given ID.
**/
UWord NTV2DeviceGetNumLUTs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 2;
		case DEVICE_ID_KONALHIDVI:	return 2;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 4;
		case DEVICE_ID_CORVID24:	return 4;
		case DEVICE_ID_IOXT:		return 2;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 5;
		case DEVICE_ID_IO4KUFC:		return 3;
		case DEVICE_ID_CORVID88:	return 8;
		case DEVICE_ID_KONA4:		return 5;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 4;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 4;
		case DEVICE_ID_KONAIP_2022:	return 5;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 5;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 4;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 4;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 4;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 5;
		case DEVICE_ID_IO4KPLUS:	return 5;
		case DEVICE_ID_IOIP_2022:	return 5;
		case DEVICE_ID_IOIP_2110:	return 5;
		case DEVICE_ID_KONAIP_2110:	return 5;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumLUTs (auto-generated)


/**
	NTV2DeviceGetNumMixers
	Returns the number of mixer/keyer widgets on the device having the given ID.
**/
UWord NTV2DeviceGetNumMixers (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 1;
		case DEVICE_ID_KONALHI:		return 0;
		case DEVICE_ID_KONALHIDVI:	return 0;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 2;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 2;
		case DEVICE_ID_CORVID24:	return 2;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 2;
		case DEVICE_ID_IO4KUFC:		return 2;
		case DEVICE_ID_CORVID88:	return 4;
		case DEVICE_ID_KONA4:		return 2;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 2;
		case DEVICE_ID_CORVIDHEVC:	return 4;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 2;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 2;
		case DEVICE_ID_IO4KPLUS:	return 2;
		case DEVICE_ID_IOIP_2022:	return 2;
		case DEVICE_ID_IOIP_2110:	return 2;
		case DEVICE_ID_KONAIP_2110:	return 2;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumMixers (auto-generated)


/**
	NTV2DeviceGetNumOutputConverters
	Returns the number of output converter widgets on the device having the given ID.
**/
UWord NTV2DeviceGetNumOutputConverters (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 1;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumOutputConverters (auto-generated)


/**
	NTV2DeviceGetNumReferenceVideoInputs
	Returns the number of reference video inputs on the device having the given ID.
**/
UWord NTV2DeviceGetNumReferenceVideoInputs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 1;
		case DEVICE_ID_CORVID3G:	return 1;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 1;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 1;
		case DEVICE_ID_CORVID24:	return 1;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 1;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 1;
		case DEVICE_ID_KONA4:		return 1;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 1;
		case DEVICE_ID_CORVIDHEVC:	return 1;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 1;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 1;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 1;
		case DEVICE_ID_IO4KPLUS:	return 1;
		case DEVICE_ID_IOIP_2022:	return 1;
		case DEVICE_ID_IOIP_2110:	return 1;
		case DEVICE_ID_KONAIP_2110:	return 1;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumReferenceVideoInputs (auto-generated)


/**
	NTV2DeviceGetNumSerialPorts
	Returns the number of RS-422 serial ports on the device having the given ID.
**/
UWord NTV2DeviceGetNumSerialPorts (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 1;
		case DEVICE_ID_CORVID3G:	return 1;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 2;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 2;
		case DEVICE_ID_CORVID24:	return 2;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 1;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 1;
		case DEVICE_ID_KONA4:		return 1;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 1;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 1;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumSerialPorts (auto-generated)


/**
	NTV2DeviceGetNumUpConverters
	Returns the number of up-converters on the device having the given ID.
**/
UWord NTV2DeviceGetNumUpConverters (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 1;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 1;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumUpConverters (auto-generated)


/**
	NTV2DeviceGetNumVideoInputs
	Returns the number of SDI video inputs on the device having the given ID.
**/
UWord NTV2DeviceGetNumVideoInputs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 1;
		case DEVICE_ID_CORVID3G:	return 1;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 1;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 2;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 4;
		case DEVICE_ID_CORVID24:	return 4;
		case DEVICE_ID_IOXT:		return 2;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 4;
		case DEVICE_ID_IO4KUFC:		return 2;
		case DEVICE_ID_CORVID88:	return 8;
		case DEVICE_ID_KONA4:		return 4;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 4;
		case DEVICE_ID_CORVIDHEVC:	return 4;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 4;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 4;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 4;
		case DEVICE_ID_IO4KPLUS:	return 4;
		case DEVICE_ID_IOIP_2022:	return 4;
		case DEVICE_ID_IOIP_2110:	return 4;
		case DEVICE_ID_KONAIP_2110:	return 1;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumVideoInputs (auto-generated)


/**
	NTV2DeviceGetNumVideoOutputs
	Returns the number of SDI video outputs on the device having the given ID.
**/
UWord NTV2DeviceGetNumVideoOutputs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 1;
		case DEVICE_ID_CORVID3G:	return 1;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 2;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 2;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 4;
		case DEVICE_ID_CORVID24:	return 4;
		case DEVICE_ID_IOXT:		return 2;
		case DEVICE_ID_TTAP:		return 1;
		case DEVICE_ID_IO4K:		return 5;
		case DEVICE_ID_IO4KUFC:		return 3;
		case DEVICE_ID_CORVID88:	return 8;
		case DEVICE_ID_KONA4:		return 4;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 4;
		case DEVICE_ID_CORVIDHEVC:	return 8;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 4;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 4;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 1;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 4;
		case DEVICE_ID_IO4KPLUS:	return 5;
		case DEVICE_ID_IOIP_2022:	return 4;
		case DEVICE_ID_IOIP_2110:	return 4;
		case DEVICE_ID_KONAIP_2110:	return 4;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumVideoOutputs (auto-generated)


/**
	NTV2DeviceGetNum2022ChannelsSFP1
	Returns the number of 2022 channels configured on SFP 1 on the device having the given ID.
**/
UWord NTV2DeviceGetNum2022ChannelsSFP1 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 0;
		case DEVICE_ID_KONALHIDVI:	return 0;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 0;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 0;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 0;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 0;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 4;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 4;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 4;
		case DEVICE_ID_IOIP_2110:	return 4;
		case DEVICE_ID_KONAIP_2110:	return 4;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNum2022ChannelsSFP1 (auto-generated)


/**
	NTV2DeviceGetNum2022ChannelsSFP2
	Returns the number of 2022 channels configured on SFP 2 on the device having the given ID.
**/
UWord NTV2DeviceGetNum2022ChannelsSFP2 (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 0;
		case DEVICE_ID_KONALHIDVI:	return 0;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 0;
		case DEVICE_ID_CORVID22:	return 0;
		case DEVICE_ID_KONA3G:		return 0;
		case DEVICE_ID_KONA3GQUAD:	return 0;
		case DEVICE_ID_CORVID24:	return 0;
		case DEVICE_ID_IOXT:		return 0;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 0;
		case DEVICE_ID_IO4KUFC:		return 0;
		case DEVICE_ID_CORVID88:	return 0;
		case DEVICE_ID_KONA4:		return 0;
		case DEVICE_ID_KONA4UFC:	return 0;
		case DEVICE_ID_CORVID44:	return 0;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 2;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 0;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNum2022ChannelsSFP2 (auto-generated)


/**
	NTV2DeviceGetNumLTCInputs
	Returns the number of analog LTC inputs on the device having the given ID.
**/
UWord NTV2DeviceGetNumLTCInputs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 1;
		case DEVICE_ID_CORVID3G:	return 1;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 2;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 2;
		case DEVICE_ID_CORVID24:	return 2;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 1;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 2;
		case DEVICE_ID_KONA4:		return 2;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 2;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 1;
		case DEVICE_ID_IOIP_2022:	return 1;
		case DEVICE_ID_IOIP_2110:	return 1;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumLTCInputs (auto-generated)


/**
	NTV2DeviceGetNumLTCOutputs
	Returns the number of analog LTC outputs on the device having the given ID.
**/
UWord NTV2DeviceGetNumLTCOutputs (const NTV2DeviceID inDeviceID)
{
	switch (inDeviceID)
	{
		case DEVICE_ID_NOTFOUND:	return 0;
		case DEVICE_ID_CORVID1:		return 0;
		case DEVICE_ID_CORVID3G:	return 0;
		case DEVICE_ID_KONALHI:		return 1;
		case DEVICE_ID_KONALHIDVI:	return 1;
		case DEVICE_ID_KONALHEPLUS:	return 0;
		case DEVICE_ID_IOEXPRESS:	return 1;
		case DEVICE_ID_CORVID22:	return 2;
		case DEVICE_ID_KONA3G:		return 2;
		case DEVICE_ID_KONA3GQUAD:	return 2;
		case DEVICE_ID_CORVID24:	return 2;
		case DEVICE_ID_IOXT:		return 1;
		case DEVICE_ID_TTAP:		return 0;
		case DEVICE_ID_IO4K:		return 1;
		case DEVICE_ID_IO4KUFC:		return 1;
		case DEVICE_ID_CORVID88:	return 1;
		case DEVICE_ID_KONA4:		return 2;
		case DEVICE_ID_KONA4UFC:	return 2;
		case DEVICE_ID_CORVID44:	return 1;
		case DEVICE_ID_CORVIDHEVC:	return 0;
		case DEVICE_ID_CORVIDHBR:	return 0;
		case DEVICE_ID_KONAIP_2022:	return 0;
		case DEVICE_ID_KONAIP_4CH_2SFP:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2TX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_2RX_1SFP_J2K:	return 0;
		case DEVICE_ID_KONAIP_1RX_1TX_2110:	return 0;
		case DEVICE_ID_IO4KPLUS:	return 1;
		case DEVICE_ID_IOIP_2022:	return 0;
		case DEVICE_ID_IOIP_2110:	return 0;
		case DEVICE_ID_KONAIP_2110:	return 0;
	#if !defined (NTV2_DEPRECATE)
		default:	return 0;
	#endif	//	!defined (NTV2_DEPRECATE)
	}	//	switch on inDeviceID

	return 0;

}	//  NTV2DeviceGetNumLTCOutputs (auto-generated)
