Responsibilities:

All aspects of windows sdk support and development
This includes
a. sdksupport email
b. driver updates(see below)
c. sdkupdates(see below)
d. coordination with mac osx and linux regarding api changes 
and common apps etc.


CVS Info.
CVSROOT
:pserver:davids@webone.aja.com:/usr/local/cvsrep

Modules:
ntv2projects
wingraphlib
win32classlibrary

CVS password is email server password.
TortoiseCVS is the client we usually use.

To build SDK on build station.
1. Remote Desktop to: PowerEdge2850
2. Start cygwin
3. cd /cygdrive/d/code/DotNet/ntv2projects/wininstall/buildscripts
4. ./build_sdk.pl -v 6.4.0.1    // build sdk verison 6.4beta1
-v version
-c doesn't do cvs update
Use -c if you want to do incremental updates to build

Build ends up in 
PowerEdge2850\sdk_build
archive in 
PowerEdge2850\sdk_archives

SDK Updates
------------------------------------------------------------
classes.lib should not be dependent on windows specific stuff.
Better Demo classes - shared between all platforms if possible
Better Demo project - shared between all platforms if possible 

Become FLTK aware.

6.4 Release Features Bug Fixes and Schedule.
1. Rectangular Transfers(see below)
2. 1080p Capture Audio Bug Fix
3. Unified Demo Program.
4. ProcAmp Support
......etc. TBD.

Get rid of all warnings and configurations that don't build...

SDK Test Plan.

Cuda Integration?..when we get halffloat

Maybe integrate with MainConcept SDK?


Driver Updates:
------------------------------------------------------------
Driver is found in ntv2projects\windriver in the xena.sln
winddk 3790.1830 - windows server 2003 sp1 ddk.
Set the following environmental variables
WNETBASE C:\WINDDK\3790.1830
WXPBASE  C:\WINDDK\3790.1830

if you'd installed the ddk to the correct location.
this allows you to build in visual studio.
The windriverinstall app is useful for loading drivers.
need to add newdev.h and newdev.lib into visual studio
include and lib directories. need to add .inf .cat and
bit files to correct directory.


The driver now is a kernel streaming 2.0 miniport driver
where we don't use any of the kernel streaming abilities
anymore..just was too hard to maintain and $soft doesn't
really support that technology. So in the meantime our OEM
API is laid into it via a very convoluted interface...
see ntv2windriverinterface.cpp


1. Rewrite oemdmatransfer
The entire driver is ugly...but this is the ugliest AFAIK. Its
my fault. I let a consultant write it without doing a review.
So, I have with great difficulty got all known bugs out of it but
it is very unmaintainable.....So a rewrite is in order...with keeping
two things in mind. 
	a. We'd like to have it do 32 bit(all we do now)
and 64 bit dma's(this requires a firmware change that has started).
	b. we like to support general rectangular transfers
see AUTOCIRCULATE_TRANSFER_STRUCT in ntv2publicinterface.h
	ULWord			videoNumSegments;		// number of segments of size videoBufferSize to DMA (i.e. numLines)
	ULWord			videoSegmentHostPitch;	// offset (in bytes) between the beginning of one host segment and the beginning of the next host segment (i.e. host rowBytes)
	ULWord			videoSegmentCardPitch;	// offset (in bytes) between the beginning of one board segment and the beginning of the next board segment (i.e. board memory rowBytes)
all addresses should be on 8 byte boundaries.

2. Vista Testing
there might be a problem with our current driver and power management...
doesn't seem to come back after a power save.


3. Miscellaneous:
------------------------------------------------------------

a. Pause/UnPause - audio seems to be out of sync.
b. Check Flush etc. and other autocirculate functions not used by our demo stuff
c. AVSync help - if a frame drops....keep audio in sync etc.
d. New driver(get rid of ks 2.0 miniport driver)(one driver to rule them all)
e. verify framestamp structures
f. New pci-x bitfile for performance initially. then it will add
64 bit dma's in our new PCIe only interface.


- note boardfeatures has to be copied to driver directory whenever
changed in classes.
 	maybe make a link? i think you can now.